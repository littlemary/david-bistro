*{-webkit-box-sizing:border-box;box-sizing:border-box}body{font:16px 'Oxygen',sans-serif;background:#61122f;color:#fff}#header-nav{background:#f6b319;border-radius:0;border:0}#logo-img{background:url(../img/restaurant-logo_large.png) no-repeat;width:150px;height:150px;margin:10px 15px 10px 0}.navbar-brand{padding-top:25px}.navbar-brand h1{font:700 1.5em/.75 'Lora',serif;color:#557c3e;text-transform:uppercase;text-shadow:1px 1px 1px #222;margin-top:0;margin-bottom:0}.navbar-brand a:focus,.navbar-brand a:hover{text-decoration:none}.navbar-brand p{color:#000;text-transform:uppercase;font-size:.7em;margin-top:15px}.navbar-brand p span{vertical-align:middle}#nav-list{margin-top:10px}#nav-list a{color:#951c49;text-align:center}#nav-list a:hover{background:#e7e7e7}#nav-list a span{font-size:1.8em}#phone{margin-top:5px}#phone a{text-align:right;padding-bottom:0}#phone div{color:#557c3e;text-align:right;padding-right:15px}.navbar-header .icon-bar,.navbar-header button.navbar-toggle{border:1px solid #61122f}.navbar-header button.navbar-toggle{clear:both;margin-top:-30px}.panel-footer{background:#222;margin-top:30px;padding-top:35px;padding-bottom:30px;border-top:0}.panel-footer div.row{margin-bottom:35px}#address,#hours{line-height:2}#address>span,#hours>span{font-size:1.3em}#address p{color:#557c3e;font-size:.8em;line-height:1.8}#testimonials{font-style:italic}#testimonials p:nth-child(2){margin-top:25px}.container .jumbotron{-webkit-box-shadow:0 0 50px #3f0c1f;box-shadow:0 0 50px #3f0c1f;border:2px solid #3f0c1f}#map-tile,#menu-tile,#specials-tile,.category-tile{position:relative;border:2px solid #3f0c1f;overflow:hidden}#map-tile,#menu-tile,#specials-tile{height:250px;width:100%;margin-bottom:15px}#map-tile:hover,#menu-tile:hover,#specials-tile:hover,.category-tile:hover{-webkit-box-shadow:0 1px 5px 1px #ccc;box-shadow:0 1px 5px 1px #ccc}#menu-tile{background:url(../img/menu-tile.jpg) no-repeat;background-position:center}#specials-tile{background:url(../img/specials-tile.jpg) no-repeat;background-position:center}#map-tile span,#menu-tile span,#specials-tile span,.category-tile span{background:#000;position:absolute;bottom:0;right:0;width:100%;text-align:center;font-size:1.6em;text-transform:uppercase;color:#fff;opacity:.8}.category-tile{width:200px;height:200px;margin:0 auto 15px}.category-tile span{font-size:1.2em}#menu-categories-title+div{margin-bottom:50px}#menu-category-title+div{margin-bottom:55px}.menu-item-tile{margin-bottom:25px}.menu-item-tile hr{width:80%}.menu-item-tile .menu-item-price{font-size:1.1em;text-align:right;margin-top:-15px;margin-right:-15px}.menu-item-tile .menu-item-price span{font-size:.6em;padding-left:5px;padding-right:5px}.menu-item-price span:nth-child(2){padding-right:0}.menu-item-photo{position:relative;border:2px solid #3f0c1f;overflow:hidden;padding:0;margin-right:-15px;margin-left:auto;margin-bottom:20px;max-width:250px}.menu-item-photo div{background:#557c3e;position:absolute;bottom:0;right:0;width:80px;text-align:center}.menu-item-description{padding-right:30px}h3.menu-item-title{margin:0 0 10px}.menu-item-details{font-size:.9em;font-style:italic}@media (min-width:1200px){.container .jumbotron{background:url(../img/jumbotron_1200.jpg) no-repeat;height:675px}}@media (max-width:767px){.navbar-brand{padding-top:10px;height:80px}.navbar-brand h1{padding-top:10px;font-size:5vw}.navbar-brand p{font-size:.6em;margin-top:12px}.navbar-brand p img{height:20px}#collapsable-nav a{font-size:1.2em}#collapsable-nav a span{font-size:1em;margin-right:5px}#call-btn>a{font-size:1.5em;display:block;margin:0 20px;padding:10px;border:2px solid #fff;background-color:#f6b319;color:#951c49}#xs-deliver{margin-top:5px;font-size:.7em;letter-spacing:.1em;text-transform:uppercase}.panel-footer section{margin-bottom:30px;text-align:center}.panel-footer section:nth-child(3){margin-bottom:0}.panel-footer section hr{width:50%}.container .jumbotron{margin-top:30px;padding:0}#menu-tile,#specials-tile{width:360px;margin:0 auto 15px}.menu-item-photo{margin-right:auto}.menu-item-description,.menu-item-tile .menu-item-price{text-align:center}}@media (max-width:479px){.navbar-brand h1{padding-top:5px;font-size:6vw}#menu-tile,#specials-tile{width:280px;margin:0 auto 15px}.col-xxs-12{position:relative;min-height:1px;padding-right:15px;padding-left:15px;float:left;width:100%}}@media (min-width:992px) and (max-width:1199px){#logo-img{background:url(../img/restaurant-logo_medium.png) no-repeat;width:100px;height:100px;margin:5px 5px 5px 0}.container .jumbotron{background:url(../img/jumbotron_992.jpg) no-repeat;height:558px}}@media (min-width:768px) and (max-width:991px){.container .jumbotron{background:url(../img/jumbotron_768.jpg) no-repeat;height:432px}}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJsb2NrL2hlYWRlci5jc3MiLCJtYWluLm1pbi5jc3MiLCJibG9jay9mb290ZXIuY3NzIiwicGFnZXMvaG9tZS5jc3MiLCJwYWdlcy9zaW5nbGUtY2F0ZWdvcnkuY3NzIiwicGFnZXMvbWVudS1jYXRlZ29yaWVzLmNzcyIsImJsb2NrL21lZGlhLmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxDLENDQ0UsNkIsQ0FDQSxxQixDQUdGLEksQ0FDRSw2QixDQUNBLGtCLENBQ0EsVSxDQUtGLFcsQ0FDRSxrQixDREFBLGUsQ0NFQSxRLENBR0YsUyxDQUNFLDBELENBQ0EsVyxDREFBLFksQ0NFQSx1QixDQUdGLGEsQ0RBRSxnQixDQ0lGLGdCLENBQ0UsK0IsQ0FFQSxhLENBQ0Esd0IsQ0FDQSw0QixDQUNBLFksQ0RBQSxlLENDS0YscUIsQ0FEQSxxQixDQUVFLG9CLENBR0YsZSxDRENFLFUsQ0NFQSx3QixDREFBLGMsQ0NFQSxlLENBR0Ysb0IsQ0FFRSxxQixDQUdGLFMsQ0FDRSxlLENBR0YsVyxDREFFLGEsQ0NFQSxpQixDQUdGLGlCLENEQUUsa0IsQ0NJRixnQixDREFFLGUsQ0NJRixNLENEQUUsYyxDQ0lGLFEsQ0MzRUUsZ0IsQ0Q4RUEsZ0IsQ0FHRixVLENDM0VBLGEsQ0Q4RUUsZ0IsQ0FDQSxrQixDQUlGLHdCLENBREEsbUMsQ0MzRUUsd0IsQ0RnRkYsbUMsQ0FDRSxVLENDNUVBLGdCLENEb0ZGLGEsQ0UxR0UsZSxDQUNBLGUsQ0Y0R0EsZ0IsQ0UxR0EsbUIsQ0FDQSxZLENGOEdGLHFCLENBQ0Usa0IsQ0FJRixRLENBREEsTSxDQUVFLGEsQ0FJRixhLENBREEsVyxDQUVFLGUsQ0FHRixVLENBQ0UsYSxDRTNHQSxjLENBQ0EsZSxDRitHRixhLENFNUdFLGlCLENGZ0hGLDRCLENFNUdFLGUsQ0ZvSEYscUIsQ0FDRSxtQyxDQUNBLDJCLENBQ0Esd0IsQ0FLRixTLENBRkEsVSxDQUNBLGMsQ0E4Q0EsYyxDR2hMRSxpQixDQUNBLHdCLENIa0xBLGUsQ0FoREYsUyxDQUZBLFUsQ0FDQSxjLENJakpFLFksQ0FDRixVLENBQ0Esa0IsQ0oySkEsZSxDQUZBLGdCLENBQ0Esb0IsQ0F5REEsb0IsQ0F2REUscUMsQ0FDQSw2QixDQUdGLFUsQ0FDRSw4QyxDQUNBLDBCLENBR0YsYyxDRy9LRSxrRCxDQUNBLDBCLENIcUxGLGMsQ0FGQSxlLENBQ0EsbUIsQ0EyQkEsbUIsQ0F6QkUsZSxDR2hMQSxpQixDQUNBLFEsQ0FDQSxPLENIa0xBLFUsQ0doTEEsaUIsQ0FDQSxlLENIa0xBLHdCLENHaExBLFUsQ0FDQSxVLENId0xGLGMsQ0FJRSxXLENBQ0EsWSxDR2hMQSxrQixDSG9MRixtQixDQU9FLGUsQ0FXRiwwQixDR2hMRSxrQixDSHNMRix3QixDS3BPRSxrQixDTHdPRixlLENBQ0Usa0IsQ0FHRixrQixDQUNFLFMsQ0tsT0YsZ0MsQ0FDQSxlLENMc09FLGdCLENBQ0EsZ0IsQ0FDQSxrQixDQUdGLHFDLENLcE9FLGMsQ0FDQSxnQixDTHNPQSxpQixDQUdGLGtDLENBQ0UsZSxDQUdGLGdCLENBQ0UsaUIsQ0FDQSx3QixDQUNBLGUsQ0FDQSxTLENBQ0Esa0IsQ0FDQSxnQixDQUNBLGtCLENLcE9BLGUsQ0x3T0Ysb0IsQ0FDRSxrQixDQUNBLGlCLENBQ0EsUSxDQUNBLE8sQ0FDQSxVLENBQ0EsaUIsQ0FHRixzQixDS3BPRSxrQixDTHdPRixrQixDQUNFLGUsQ0FHRixrQixDQUNFLGMsQ0FDQSxpQixDQWFGLDBCQUNFLHFCLENLcE9FLG1ELENMc09BLGMsQUFJSix5QkFHRSxhLENBQ0UsZ0IsQ0twT0EsVyxDTHdPRixnQixDQUVFLGdCLENLcE9BLGEsQ0x5T0YsZSxDQUVFLGMsQ0twT0EsZSxDTHdPRixtQixDQUVFLFcsQ0FHRixrQixDS25PRSxlLENMd09GLHVCLENBRUUsYSxDQUNBLGdCLENBR0YsVyxDS3BPRSxlLENBQ0EsYSxDTHNPQSxhLENLcE9BLFksQ0FDQSxxQixDTHNPQSx3QixDS3BPQSxhLENMd09GLFcsQ0twT0EsYyxDQUNBLGMsQ0FDRSxtQixDQUNELHdCLENMNE9ELHFCLENBQ0Usa0IsQ0FDQSxpQixDQUdGLGtDLENBQ0UsZSxDQUlGLHdCLENBQ0UsUyxDQU9GLHFCLENBQ0UsZSxDQUNBLFMsQ0FHRixVLENBQ0EsYyxDQUNFLFcsQ0FDQSxrQixDQUdGLGdCLENBQ0UsaUIsQ0FPRixzQixDQUpBLGdDLENBQ0UsbUIsQUFRSix5QkFHRSxnQixDQUVFLGUsQ0FDQSxhLENBT0YsVSxDQUNBLGMsQ0FDRSxXLENBQ0Esa0IsQ0FHRixXLENBQ0UsaUIsQ0FDQSxjLENBQ0Esa0IsQ0FDQSxpQixDQUNBLFUsQ0FDQSxZLEFBSUosZ0RBR0UsUyxDQUNFLDJELENBQ0EsVyxDQUNBLFksQ0FDQSxvQixDQU9GLHFCLENBQ0Usa0QsQ0FDQSxjLEFBTUosK0NBR0UscUIsQ0FDRSxrRCxDQUNBLGMiLCJmaWxlIjoibWFpbi5taW4uY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqIEhFQURFUiAqKi9cclxuI2hlYWRlci1uYXYge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2Y2YjMxOTtcclxuICAgIGJvcmRlci1yYWRpdXM6IDA7XHJcbiAgICBib3JkZXI6IDA7XHJcbiAgfVxyXG4gIFxyXG4gICNsb2dvLWltZyB7XHJcbiAgICBiYWNrZ3JvdW5kOiB1cmwoJy4uL2ltZy9yZXN0YXVyYW50LWxvZ29fbGFyZ2UucG5nJykgbm8tcmVwZWF0O1xyXG4gICAgd2lkdGg6IDE1MHB4O1xyXG4gICAgaGVpZ2h0OiAxNTBweDtcclxuICAgIG1hcmdpbjogMTBweCAxNXB4IDEwcHggMDtcclxuICB9XHJcbiAgXHJcbiAgLm5hdmJhci1icmFuZCB7XHJcbiAgICBwYWRkaW5nLXRvcDogMjVweDtcclxuICB9XHJcbiAgLm5hdmJhci1icmFuZCBoMSB7IC8qIFJlc3RhdXJhbnQgbmFtZSAqL1xyXG4gICAgZm9udC1mYW1pbHk6ICdMb3JhJywgc2VyaWY7XHJcbiAgICBjb2xvcjogIzU1N2MzZTtcclxuICAgIGZvbnQtc2l6ZTogMS41ZW07XHJcbiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbiAgICB0ZXh0LXNoYWRvdzogMXB4IDFweCAxcHggIzIyMjtcclxuICAgIG1hcmdpbi10b3A6IDA7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAwO1xyXG4gICAgbGluZS1oZWlnaHQ6IC43NTtcclxuICB9XHJcbiAgLm5hdmJhci1icmFuZCBhOmhvdmVyLCAubmF2YmFyLWJyYW5kIGE6Zm9jdXMge1xyXG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xyXG4gIH1cclxuICAubmF2YmFyLWJyYW5kIHAgeyAvKiBLb3NoZXIgY2VydCAqL1xyXG4gICAgY29sb3I6ICMwMDA7XHJcbiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG4gICAgZm9udC1zaXplOiAuN2VtO1xyXG4gICAgbWFyZ2luLXRvcDogMTVweDtcclxuICB9XHJcbiAgLm5hdmJhci1icmFuZCBwIHNwYW4geyAvKiBTdGFyLUsgKi9cclxuICAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XHJcbiAgfVxyXG4gIFxyXG4gICNuYXYtbGlzdCB7XHJcbiAgICBtYXJnaW4tdG9wOiAxMHB4O1xyXG4gIH1cclxuICAjbmF2LWxpc3QgYSB7XHJcbiAgICBjb2xvcjogIzk1MUM0OTtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICB9XHJcbiAgI25hdi1saXN0IGE6aG92ZXIge1xyXG4gICAgYmFja2dyb3VuZDogI0U3RTdFNztcclxuICB9XHJcbiAgI25hdi1saXN0IGEgc3BhbiB7XHJcbiAgICBmb250LXNpemU6IDEuOGVtO1xyXG4gIH1cclxuICBcclxuICAjcGhvbmUge1xyXG4gICAgbWFyZ2luLXRvcDogNXB4O1xyXG4gIH1cclxuICAjcGhvbmUgYSB7IC8qIFBob25lIG51bWJlciAqL1xyXG4gICAgdGV4dC1hbGlnbjogcmlnaHQ7XHJcbiAgICBwYWRkaW5nLWJvdHRvbTogMDtcclxuICB9XHJcbiAgI3Bob25lIGRpdiB7IC8qIFdlIERlbGl2ZXIgKi9cclxuICAgIGNvbG9yOiAjNTU3YzNlO1xyXG4gICAgdGV4dC1hbGlnbjogcmlnaHQ7XHJcbiAgICBwYWRkaW5nLXJpZ2h0OiAxNXB4O1xyXG4gIH1cclxuICBcclxuICAubmF2YmFyLWhlYWRlciBidXR0b24ubmF2YmFyLXRvZ2dsZSwgLm5hdmJhci1oZWFkZXIgLmljb24tYmFyIHtcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkICM2MTEyMmY7XHJcbiAgfVxyXG4gIC5uYXZiYXItaGVhZGVyIGJ1dHRvbi5uYXZiYXItdG9nZ2xlIHtcclxuICAgIGNsZWFyOiBib3RoO1xyXG4gICAgbWFyZ2luLXRvcDogLTMwcHg7XHJcbiAgfVxyXG4gIC8qIEVORCBIRUFERVIgKi8iLCIqIHtcbiAgLXdlYmtpdC1ib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xufVxuXG5ib2R5IHtcbiAgZm9udDogMTZweCAnT3h5Z2VuJywgc2Fucy1zZXJpZjtcbiAgYmFja2dyb3VuZDogIzYxMTIyZjtcbiAgY29sb3I6ICNmZmY7XG59XG5cbi8qKiBIRUFERVIgKiovXG5cbiNoZWFkZXItbmF2IHtcbiAgYmFja2dyb3VuZDogI2Y2YjMxOTtcbiAgYm9yZGVyLXJhZGl1czogMDtcbiAgYm9yZGVyOiAwO1xufVxuXG4jbG9nby1pbWcge1xuICBiYWNrZ3JvdW5kOiB1cmwoJy4uL2ltZy9yZXN0YXVyYW50LWxvZ29fbGFyZ2UucG5nJykgbm8tcmVwZWF0O1xuICB3aWR0aDogMTUwcHg7XG4gIGhlaWdodDogMTUwcHg7XG4gIG1hcmdpbjogMTBweCAxNXB4IDEwcHggMDtcbn1cblxuLm5hdmJhci1icmFuZCB7XG4gIHBhZGRpbmctdG9wOiAyNXB4O1xufVxuXG4ubmF2YmFyLWJyYW5kIGgxIHtcbiAgZm9udDogYm9sZCAxLjVlbS8uNzUgJ0xvcmEnLCBzZXJpZjtcbiAgLyogUmVzdGF1cmFudCBuYW1lICovXG4gIGNvbG9yOiAjNTU3YzNlO1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICB0ZXh0LXNoYWRvdzogMXB4IDFweCAxcHggIzIyMjtcbiAgbWFyZ2luLXRvcDogMDtcbiAgbWFyZ2luLWJvdHRvbTogMDtcbn1cblxuLm5hdmJhci1icmFuZCBhOmhvdmVyLFxuLm5hdmJhci1icmFuZCBhOmZvY3VzIHtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xufVxuXG4ubmF2YmFyLWJyYW5kIHAge1xuICAvKiBLb3NoZXIgY2VydCAqL1xuICBjb2xvcjogIzAwMDtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgZm9udC1zaXplOiAuN2VtO1xuICBtYXJnaW4tdG9wOiAxNXB4O1xufVxuXG4ubmF2YmFyLWJyYW5kIHAgc3BhbiB7XG4gIC8qIFN0YXItSyAqL1xuICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xufVxuXG4jbmF2LWxpc3Qge1xuICBtYXJnaW4tdG9wOiAxMHB4O1xufVxuXG4jbmF2LWxpc3QgYSB7XG4gIGNvbG9yOiAjOTUxQzQ5O1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5cbiNuYXYtbGlzdCBhOmhvdmVyIHtcbiAgYmFja2dyb3VuZDogI0U3RTdFNztcbn1cblxuI25hdi1saXN0IGEgc3BhbiB7XG4gIGZvbnQtc2l6ZTogMS44ZW07XG59XG5cbiNwaG9uZSB7XG4gIG1hcmdpbi10b3A6IDVweDtcbn1cblxuI3Bob25lIGEge1xuICAvKiBQaG9uZSBudW1iZXIgKi9cbiAgdGV4dC1hbGlnbjogcmlnaHQ7XG4gIHBhZGRpbmctYm90dG9tOiAwO1xufVxuXG4jcGhvbmUgZGl2IHtcbiAgLyogV2UgRGVsaXZlciAqL1xuICBjb2xvcjogIzU1N2MzZTtcbiAgdGV4dC1hbGlnbjogcmlnaHQ7XG4gIHBhZGRpbmctcmlnaHQ6IDE1cHg7XG59XG5cbi5uYXZiYXItaGVhZGVyIGJ1dHRvbi5uYXZiYXItdG9nZ2xlLFxuLm5hdmJhci1oZWFkZXIgLmljb24tYmFyIHtcbiAgYm9yZGVyOiAxcHggc29saWQgIzYxMTIyZjtcbn1cblxuLm5hdmJhci1oZWFkZXIgYnV0dG9uLm5hdmJhci10b2dnbGUge1xuICBjbGVhcjogYm90aDtcbiAgbWFyZ2luLXRvcDogLTMwcHg7XG59XG5cbi8qIEVORCBIRUFERVIgKi9cblxuLyogRk9PVEVSICovXG5cbi5wYW5lbC1mb290ZXIge1xuICBiYWNrZ3JvdW5kOiAjMjIyO1xuICBtYXJnaW4tdG9wOiAzMHB4O1xuICBwYWRkaW5nLXRvcDogMzVweDtcbiAgcGFkZGluZy1ib3R0b206IDMwcHg7XG4gIGJvcmRlci10b3A6IDA7XG59XG5cbi5wYW5lbC1mb290ZXIgZGl2LnJvdyB7XG4gIG1hcmdpbi1ib3R0b206IDM1cHg7XG59XG5cbiNob3VycyxcbiNhZGRyZXNzIHtcbiAgbGluZS1oZWlnaHQ6IDI7XG59XG5cbiNob3VycyA+IHNwYW4sXG4jYWRkcmVzcyA+IHNwYW4ge1xuICBmb250LXNpemU6IDEuM2VtO1xufVxuXG4jYWRkcmVzcyBwIHtcbiAgY29sb3I6ICM1NTdjM2U7XG4gIGZvbnQtc2l6ZTogLjhlbTtcbiAgbGluZS1oZWlnaHQ6IDEuODtcbn1cblxuI3Rlc3RpbW9uaWFscyB7XG4gIGZvbnQtc3R5bGU6IGl0YWxpYztcbn1cblxuI3Rlc3RpbW9uaWFscyBwOm50aC1jaGlsZCgyKSB7XG4gIG1hcmdpbi10b3A6IDI1cHg7XG59XG5cbi8qIEVORCBGT09URVIgKi9cblxuLyogSE9NRSBQQUdFICovXG5cbi5jb250YWluZXIgLmp1bWJvdHJvbiB7XG4gIC13ZWJraXQtYm94LXNoYWRvdzogMCAwIDUwcHggIzNGMEMxRjtcbiAgYm94LXNoYWRvdzogMCAwIDUwcHggIzNGMEMxRjtcbiAgYm9yZGVyOiAycHggc29saWQgIzNGMEMxRjtcbn1cblxuI21lbnUtdGlsZSxcbiNzcGVjaWFscy10aWxlLFxuI21hcC10aWxlIHtcbiAgaGVpZ2h0OiAyNTBweDtcbiAgd2lkdGg6IDEwMCU7XG4gIG1hcmdpbi1ib3R0b206IDE1cHg7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgYm9yZGVyOiAycHggc29saWQgIzNGMEMxRjtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbn1cblxuI21lbnUtdGlsZTpob3ZlcixcbiNzcGVjaWFscy10aWxlOmhvdmVyLFxuI21hcC10aWxlOmhvdmVyIHtcbiAgLXdlYmtpdC1ib3gtc2hhZG93OiAwIDFweCA1cHggMXB4ICNjY2NjY2M7XG4gIGJveC1zaGFkb3c6IDAgMXB4IDVweCAxcHggI2NjY2NjYztcbn1cblxuI21lbnUtdGlsZSB7XG4gIGJhY2tncm91bmQ6IHVybCgnLi4vaW1nL21lbnUtdGlsZS5qcGcnKSBuby1yZXBlYXQ7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlcjtcbn1cblxuI3NwZWNpYWxzLXRpbGUge1xuICBiYWNrZ3JvdW5kOiB1cmwoJy4uL2ltZy9zcGVjaWFscy10aWxlLmpwZycpIG5vLXJlcGVhdDtcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyO1xufVxuXG4jbWVudS10aWxlIHNwYW4sXG4jc3BlY2lhbHMtdGlsZSBzcGFuLFxuI21hcC10aWxlIHNwYW4ge1xuICBiYWNrZ3JvdW5kOiAjMDAwO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGJvdHRvbTogMDtcbiAgcmlnaHQ6IDA7XG4gIHdpZHRoOiAxMDAlO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGZvbnQtc2l6ZTogMS42ZW07XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gIGNvbG9yOiAjZmZmO1xuICBvcGFjaXR5OiAuODtcbn1cblxuLyogRU5EIEhPTUUgUEFHRSAqL1xuXG4vKiBNRU5VIENBVEVHT1JJRVMgUEFHRSAqL1xuXG4uY2F0ZWdvcnktdGlsZSB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgYm9yZGVyOiAycHggc29saWQgIzNGMEMxRjtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgd2lkdGg6IDIwMHB4O1xuICBoZWlnaHQ6IDIwMHB4O1xuICBtYXJnaW46IDAgYXV0byAxNXB4O1xufVxuXG4uY2F0ZWdvcnktdGlsZSBzcGFuIHtcbiAgYmFja2dyb3VuZDogIzAwMDtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBib3R0b206IDA7XG4gIHJpZ2h0OiAwO1xuICB3aWR0aDogMTAwJTtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBmb250LXNpemU6IDEuMmVtO1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICBjb2xvcjogI2ZmZjtcbiAgb3BhY2l0eTogLjg7XG59XG5cbi5jYXRlZ29yeS10aWxlOmhvdmVyIHtcbiAgLXdlYmtpdC1ib3gtc2hhZG93OiAwIDFweCA1cHggMXB4ICNjY2NjY2M7XG4gIGJveC1zaGFkb3c6IDAgMXB4IDVweCAxcHggI2NjY2NjYztcbn1cblxuI21lbnUtY2F0ZWdvcmllcy10aXRsZSArIGRpdiB7XG4gIG1hcmdpbi1ib3R0b206IDUwcHg7XG59XG5cbi8qIEVORCBNRU5VIENBVEVHT1JJRVMgUEFHRSAqL1xuXG4jbWVudS1jYXRlZ29yeS10aXRsZStkaXYge1xuICBtYXJnaW4tYm90dG9tOiA1NXB4O1xufVxuXG4ubWVudS1pdGVtLXRpbGUge1xuICBtYXJnaW4tYm90dG9tOiAyNXB4O1xufVxuXG4ubWVudS1pdGVtLXRpbGUgaHIge1xuICB3aWR0aDogODAlO1xufVxuXG4ubWVudS1pdGVtLXRpbGUgLm1lbnUtaXRlbS1wcmljZSB7XG4gIGZvbnQtc2l6ZTogMS4xZW07XG4gIHRleHQtYWxpZ246IHJpZ2h0O1xuICBtYXJnaW4tdG9wOiAtMTVweDtcbiAgbWFyZ2luLXJpZ2h0OiAtMTVweDtcbn1cblxuLm1lbnUtaXRlbS10aWxlIC5tZW51LWl0ZW0tcHJpY2Ugc3BhbiB7XG4gIGZvbnQtc2l6ZTogLjZlbTtcbiAgcGFkZGluZy1sZWZ0OiA1cHg7XG4gIHBhZGRpbmctcmlnaHQ6IDVweDtcbn1cblxuLm1lbnUtaXRlbS1wcmljZSBzcGFuOm50aC1jaGlsZCgyKSB7XG4gIHBhZGRpbmctcmlnaHQ6IDA7XG59XG5cbi5tZW51LWl0ZW0tcGhvdG8ge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGJvcmRlcjogMnB4IHNvbGlkICMzRjBDMUY7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIHBhZGRpbmc6IDA7XG4gIG1hcmdpbi1yaWdodDogLTE1cHg7XG4gIG1hcmdpbi1sZWZ0OiBhdXRvO1xuICBtYXJnaW4tYm90dG9tOiAyMHB4O1xuICBtYXgtd2lkdGg6IDI1MHB4O1xufVxuXG4ubWVudS1pdGVtLXBob3RvIGRpdiB7XG4gIGJhY2tncm91bmQ6ICM1NTdjM2U7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgYm90dG9tOiAwO1xuICByaWdodDogMDtcbiAgd2lkdGg6IDgwcHg7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cblxuLm1lbnUtaXRlbS1kZXNjcmlwdGlvbiB7XG4gIHBhZGRpbmctcmlnaHQ6IDMwcHg7XG59XG5cbmgzLm1lbnUtaXRlbS10aXRsZSB7XG4gIG1hcmdpbjogMCAwIDEwcHg7XG59XG5cbi5tZW51LWl0ZW0tZGV0YWlscyB7XG4gIGZvbnQtc2l6ZTogLjllbTtcbiAgZm9udC1zdHlsZTogaXRhbGljO1xufVxuXG4vKioqKioqKioqKiBMYXJnZSBkZXZpY2VzIG9ubHkgKioqKioqKioqKi9cblxuLyoqKioqKioqKiogTWVkaXVtIGRldmljZXMgb25seSAqKioqKioqKioqL1xuXG4vKioqKioqKioqKiBTbWFsbCBkZXZpY2VzIG9ubHkgKioqKioqKioqKi9cblxuLyoqKioqKioqKiogRXh0cmEgc21hbGwgZGV2aWNlcyBvbmx5ICoqKioqKioqKiovXG5cbi8qKioqKioqKioqIFN1cGVyIGV4dHJhIHNtYWxsIGRldmljZXMgT25seSA6LSkgKGUuZy4sIGlQaG9uZSA0KSAqKioqKioqKioqL1xuXG5AbWVkaWEgKG1pbi13aWR0aDogMTIwMHB4KSB7XG4gIC5jb250YWluZXIgLmp1bWJvdHJvbiB7XG4gICAgYmFja2dyb3VuZDogdXJsKCcuLi9pbWcvanVtYm90cm9uXzEyMDAuanBnJykgbm8tcmVwZWF0O1xuICAgIGhlaWdodDogNjc1cHg7XG4gIH1cbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDc2N3B4KSB7XG4gIC8qIEhlYWRlciAqL1xuXG4gIC5uYXZiYXItYnJhbmQge1xuICAgIHBhZGRpbmctdG9wOiAxMHB4O1xuICAgIGhlaWdodDogODBweDtcbiAgfVxuXG4gIC5uYXZiYXItYnJhbmQgaDEge1xuICAgIC8qIFJlc3RhdXJhbnQgbmFtZSAqL1xuICAgIHBhZGRpbmctdG9wOiAxMHB4O1xuICAgIGZvbnQtc2l6ZTogNXZ3O1xuICAgIC8qIDF2dyA9IDElIG9mIHZpZXdwb3J0IHdpZHRoICovXG4gIH1cblxuICAubmF2YmFyLWJyYW5kIHAge1xuICAgIC8qIEtvc2hlciBjZXJ0ICovXG4gICAgZm9udC1zaXplOiAuNmVtO1xuICAgIG1hcmdpbi10b3A6IDEycHg7XG4gIH1cblxuICAubmF2YmFyLWJyYW5kIHAgaW1nIHtcbiAgICAvKiBTdGFyLUsgKi9cbiAgICBoZWlnaHQ6IDIwcHg7XG4gIH1cblxuICAjY29sbGFwc2FibGUtbmF2IGEge1xuICAgIC8qIENvbGxhcHNlZCBuYXYgbWVudSB0ZXh0ICovXG4gICAgZm9udC1zaXplOiAxLjJlbTtcbiAgfVxuXG4gICNjb2xsYXBzYWJsZS1uYXYgYSBzcGFuIHtcbiAgICAvKiBDb2xsYXBzZWQgbmF2IG1lbnUgZ2x5cGggKi9cbiAgICBmb250LXNpemU6IDFlbTtcbiAgICBtYXJnaW4tcmlnaHQ6IDVweDtcbiAgfVxuXG4gICNjYWxsLWJ0biA+IGEge1xuICAgIGZvbnQtc2l6ZTogMS41ZW07XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgbWFyZ2luOiAwIDIwcHg7XG4gICAgcGFkZGluZzogMTBweDtcbiAgICBib3JkZXI6IDJweCBzb2xpZCAjZmZmO1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNmNmIzMTk7XG4gICAgY29sb3I6ICM5NTFjNDk7XG4gIH1cblxuICAjeHMtZGVsaXZlciB7XG4gICAgbWFyZ2luLXRvcDogNXB4O1xuICAgIGZvbnQtc2l6ZTogLjdlbTtcbiAgICBsZXR0ZXItc3BhY2luZzogLjFlbTtcbiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICB9XG5cbiAgLyogRW5kIEhlYWRlciAqL1xuXG4gIC8qIEZvb3RlciAqL1xuXG4gIC5wYW5lbC1mb290ZXIgc2VjdGlvbiB7XG4gICAgbWFyZ2luLWJvdHRvbTogMzBweDtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIH1cblxuICAucGFuZWwtZm9vdGVyIHNlY3Rpb246bnRoLWNoaWxkKDMpIHtcbiAgICBtYXJnaW4tYm90dG9tOiAwO1xuICAgIC8qIG1hcmdpbiBhbHJlYWR5IGV4aXN0cyBvbiB0aGUgd2hvbGUgcm93ICovXG4gIH1cblxuICAucGFuZWwtZm9vdGVyIHNlY3Rpb24gaHIge1xuICAgIHdpZHRoOiA1MCU7XG4gIH1cblxuICAvKiBFbmQgRm9vdGVyICovXG5cbiAgLyogSG9tZSBQYWdlICovXG5cbiAgLmNvbnRhaW5lciAuanVtYm90cm9uIHtcbiAgICBtYXJnaW4tdG9wOiAzMHB4O1xuICAgIHBhZGRpbmc6IDA7XG4gIH1cblxuICAjbWVudS10aWxlLFxuICAjc3BlY2lhbHMtdGlsZSB7XG4gICAgd2lkdGg6IDM2MHB4O1xuICAgIG1hcmdpbjogMCBhdXRvIDE1cHg7XG4gIH1cblxuICAubWVudS1pdGVtLXBob3RvIHtcbiAgICBtYXJnaW4tcmlnaHQ6IGF1dG87XG4gIH1cblxuICAubWVudS1pdGVtLXRpbGUgLm1lbnUtaXRlbS1wcmljZSB7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICB9XG5cbiAgLm1lbnUtaXRlbS1kZXNjcmlwdGlvbiB7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICB9XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA0NzlweCkge1xuICAvKiBIZWFkZXIgKi9cblxuICAubmF2YmFyLWJyYW5kIGgxIHtcbiAgICAvKiBSZXN0YXVyYW50IG5hbWUgKi9cbiAgICBwYWRkaW5nLXRvcDogNXB4O1xuICAgIGZvbnQtc2l6ZTogNnZ3O1xuICB9XG5cbiAgLyogRW5kIEhlYWRlciAqL1xuXG4gIC8qIEhvbWUgcGFnZSAqL1xuXG4gICNtZW51LXRpbGUsXG4gICNzcGVjaWFscy10aWxlIHtcbiAgICB3aWR0aDogMjgwcHg7XG4gICAgbWFyZ2luOiAwIGF1dG8gMTVweDtcbiAgfVxuXG4gIC5jb2wteHhzLTEyIHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgbWluLWhlaWdodDogMXB4O1xuICAgIHBhZGRpbmctcmlnaHQ6IDE1cHg7XG4gICAgcGFkZGluZy1sZWZ0OiAxNXB4O1xuICAgIGZsb2F0OiBsZWZ0O1xuICAgIHdpZHRoOiAxMDAlO1xuICB9XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiA5OTJweCkgYW5kIChtYXgtd2lkdGg6IDExOTlweCkge1xuICAvKiBIZWFkZXIgKi9cblxuICAjbG9nby1pbWcge1xuICAgIGJhY2tncm91bmQ6IHVybCgnLi4vaW1nL3Jlc3RhdXJhbnQtbG9nb19tZWRpdW0ucG5nJykgbm8tcmVwZWF0O1xuICAgIHdpZHRoOiAxMDBweDtcbiAgICBoZWlnaHQ6IDEwMHB4O1xuICAgIG1hcmdpbjogNXB4IDVweCA1cHggMDtcbiAgfVxuXG4gIC8qIEVuZCBIZWFkZXIgKi9cblxuICAvKiBIb21lIFBhZ2UgKi9cblxuICAuY29udGFpbmVyIC5qdW1ib3Ryb24ge1xuICAgIGJhY2tncm91bmQ6IHVybCgnLi4vaW1nL2p1bWJvdHJvbl85OTIuanBnJykgbm8tcmVwZWF0O1xuICAgIGhlaWdodDogNTU4cHg7XG4gIH1cblxuICAvKiBFbmQgSG9tZSBQYWdlICovXG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiA3NjhweCkgYW5kIChtYXgtd2lkdGg6IDk5MXB4KSB7XG4gIC8qIEhvbWUgUGFnZSAqL1xuXG4gIC5jb250YWluZXIgLmp1bWJvdHJvbiB7XG4gICAgYmFja2dyb3VuZDogdXJsKCcuLi9pbWcvanVtYm90cm9uXzc2OC5qcGcnKSBuby1yZXBlYXQ7XG4gICAgaGVpZ2h0OiA0MzJweDtcbiAgfVxuXG4gIC8qIEVuZCBIb21lIFBhZ2UgKi9cbn1cclxuLyojIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0p6YjNWeVkyVnpJanBiSW1Kc2IyTnJMMmhsWVdSbGNpNWpjM01pTENKaWJHOWpheTltYjI5MFpYSXVZM056SWl3aWNHRm5aWE12YUc5dFpTNWpjM01pTENKd1lXZGxjeTl0Wlc1MUxXTmhkR1ZuYjNKcFpYTXVZM056SWl3aWNHRm5aWE12YzJsdVoyeGxMV05oZEdWbmIzSjVMbU56Y3lJc0ltSnNiMk5yTDIxbFpHbGhMbU56Y3lJc0ltMWhhVzR1WTNOeklsMHNJbTVoYldWeklqcGJYU3dpYldGd2NHbHVaM01pT2lKQlFVRkJPMGxCUTBrc09FSkJRVlU3V1VGQlZpeHpRa0ZCVlR0QlFVTmtPMEZCUTBFN1NVRkRTU3hsUVVGWE8wbEJRMWdzVjBGQlFUdEpRVU5FTEhsQ1FVRkJPMGxCUTBNc2FVTkJRVlU3UVVGRFpEdEJRVU5CTEdGQlFXRTdRVUZEWWp0SlFVTkpMSGxDUVVGNVFqdEpRVU42UWl4blFrRkJRVHRKUVVORUxGTkJRVUU3UlVGRFJEczdSVUZGUVR0SlFVTkZMRFpFUVVGMVF6dEpRVU4yUXl4WlFVRlpPMGxCUTFvc1lVRkJZVHRKUVVOaUxIZENRVUZyUWp0RlFVTndRanM3UlVGRlFUdEpRVU5GTEdsQ1FVRmxPMFZCUTJwQ08wVkJRMEVzYlVKQlFXMUNMRzlDUVVGRE8wbEJRMnhDTERCQ1FVRkJPMGxCUTBFc1kwRkJZenRKUVVOa0xHZENRVUZuUWp0SlFVTm9RaXg1UWtGQlFUdEpRVU5CTEdsQ1FVRnBRanRKUVVOcVFpdzJRa0ZCWVR0SlFVTmlMR0ZCUVdFN1NVRkRZaXhuUWtGQlowSTdTVUZEYUVJc1owSkJRV2RDTzBWQlEyeENPMFZCUTBFN1NVRkRSU3h4UWtGQmNVSTdSVUZEZGtJN1JVRkRRU3hyUWtGQlF5eG5Ra0ZCUVR0SlFVTkRMRmRCUVZVN1NVRkRWaXg1UWtGQmEwSTdTVUZEYkVJc1pVRkJRVHRKUVVOQkxHZENRVUZaTzBWQlEyUTdSVUZEUVN4MVFrRkJjMElzVjBGQlFUdEpRVU53UWl4elFrRkJRVHRGUVVOR096dEZRVVZCTzBsQlEwVXNaMEpCUVdkQ08wVkJRMnhDTzBWQlEwRTdTVUZEUXl4alFVRkJPMGxCUTBNc2EwSkJRVTg3UlVGRFZEdEZRVU5CTzBsQlEwVXNiVUpCUVcxQ08wVkJRM0pDTzBWQlEwRTdTVUZEUlN4blFrRkJRVHRGUVVOR096dEZRVVZCTzBsQlEwVXNaVUZCWlR0RlFVTnFRanRGUVVOQkxGZEJRVU1zYVVKQlFVRTdTVUZEUXl4cFFrRkJhVUk3U1VGRGFrSXNhVUpCUVdsQ08wVkJRMjVDTzBWQlEwRXNZVUZCWVN4bFFVRmxPMGxCUXpGQ0xHTkJRV0U3U1VGRFlpeHBRa0ZCYVVJN1NVRkRha0lzYlVKQlFVRTdSVUZEUmpzN1JVTXhSVUU3U1VGRFJTeDVRa0ZCYTBJN1JVRkRjRUk3UlVGRFFUdEpRVU5GTEZkQlFWYzdTVUZEV0N4cFFrRkJaVHRGUVVOcVFqdEZRVU5CTEdWQlFXVTdRVUZEYWtJc1YwRkJWenRCUVVOWU8wbEJRMGtzWjBKQlFXZENPMGxCUTJoQ0xHbENRVUZuUWp0SlFVTm9RaXh2UWtGQlFUdEpRVU5CTEhOQ1FVRnpRanRKUVVOMFFpeGhRVUZoTzBWQlEyWTdSVUZEUVR0SlFVTkZMRzFDUVVGblFqdEZRVU5zUWp0RlFVTkJPMGxCUTBVc1kwRkJRVHRGUVVOR08wVkJRMEU3U1VGRFJTeG5Ra0ZCUVR0RlFVTkdPMFZCUTBFN1NVRkRSU3hqUVVGQk8wbEJRMEVzWlVGQlpUdEpRVU5zUWl4blFrRkJRVHRGUXpkQ1F6dEZRVU5CTzBsQlEwVXNhMEpCUVd0Q08wVkJRM0JDTzBWQlEwRTdTVUZEUXl4blFrRkJRVHRGUVVORU8wVkJRMEVzWlVGQlpUczdRVUZGYWtJc1kwRkJZenRCUVVOa08wbEJRMGtzYjBOQlFUSkNPMWxCUVROQ0xEUkNRVUV5UWp0SlFVTXpRaXg1UWtGQmEwSTdSVUZEY0VJN08wVkJSVUU3U1VGRFJTeGhRVUZCTzBsQlEwRXNWMEZCVnp0SlFVTllMRzFDUVVGdFFqdEpRVU51UWl4clFrRkJhMEk3U1VGRGJFSXNlVUpCUVVFN1NVRkRRU3huUWtGQlpUdEZRVU5xUWp0RlFVTkJPMGxCUTBVc2VVTkJRVUU3V1VGQlFTeHBRMEZCUVR0RlFVTkdPMFZCUTBFN1NVRkRSU3hwUkVGQlZ6dEpRVU5ZTERKQ1FVRlZPMFZCUTFvN1JVRkRRVHRKUVVORkxIRkVRVUZyUWp0SlFVTnNRaXd5UWtGQk1rSTdSVUZETjBJN1JVRkRRVHRKUVVORkxHdENRVUZoTzBsQlEySXNVMEZCUVR0SlFVTkJMRkZCUVZFN1NVTnlRMUlzVjBGQlZ6dEpRVU5ZTEd0Q1FVRmpPMGxCUTJRc1owSkJRV2RDTzBsQlEyaENMSGxDUVVGNVFqdEpRVU42UWl4elFrRkJhMEk3U1VGRGJFSXNWMEZCVnp0SlFVTllMRmRCUVZjN1JVRkRZanRGUVVOQkxHdENRVUZGTzBGQlEwb3NlVUpCUVhkQ08wRkJRM2hDTzBsQlEwa3NhMEpCUVZjN1NVRkRXQ3g1UWtGQlZUdEpRVU5XTEdkQ1FVRmhPMGxCUTJJc1dVRkJXVHRKUVVOYUxHRkJRV0U3U1VGRFlpeHRRa0ZCYlVJN1JVRkRja0k3UlVGRFFUdEpRVU5GTEd0Q1FVRmhPMGxCUTJJc1UwRkJRVHRKUVVOQkxGRkJRVkU3U1VGRFVpeFhRVUZYTzBsQlExZ3NhMEpCUVVFN1NVRkRSQ3huUWtGQlFUdEpRVU5ETEhsQ1FVRjVRanRKUVVONlFpeHpRa0ZCY1VJN1NVRkRja0lzVjBGQlFUdEpRVU5CTEZkQlFWYzdSVU0xUW1JN1JVRkRRVHRKUVVORkxIbERRVUZCTzFsQlFVRXNhVU5CUVVFN1JVRkRSanM3UlVGRlFUdEpRVU5GTEcxQ1FVRnRRanRGUVVOeVFqdEZRVU5CTERaQ1FVRkZPMFZCUTBZN1NVRkRSU3h0UWtGQmEwSTdSVUZEY0VJN1JVRkRRVHRKUVVORkxHMUNRVUZ0UWp0RlFVTnlRanRGUVVOQk8wbEJRMFVzVlVGQlZUdEZRVU5hTzBWQlEwRTdTVUZEUlN4blFrRkJRVHRKUVVOQkxHbENRVUZwUWp0SlFVTnFRaXhwUWtGQmFVSTdTVUZEYWtJc2JVSkJRVUU3UlVGRFJqdEZRVU5CTzBsQlEwVXNaVUZCWlR0SlFVTm1MR2xDUVVGcFFqdEpRVU5xUWl4clFrRkJXVHRGUVVOa08wVkJRMEU3VDBGRFN5eG5Ra0ZCWjBJN1JVRkRja0k3UlVGRFFUdEpRVU5GTEd0Q1FVRnJRanRKUVVOc1FpeDVRa0ZCYjBJN1NVRkRjRUlzWjBKQlFWYzdTVUZEV0N4VlFVRlZPMGxCUTFZc2JVSkJRV0U3U1VGRFlpeHBRa0ZCYVVJN1NVRkRha0lzYlVKQlFXMUNPMGxCUTI1Q0xHZENRVUZCTzBWQlEwWTdSVUZEUVR0SlFVTkZMR3RDUVVGQk8wbEJRMEVzVTBGQlV6dEpRVU5VTEZGQlFWRTdTVUZEVWl4WFFVRkJPMGxCUTBFc2VVSkJRVzFDTzBsQlEyNUNMR3RDUVVGcFFqdEZRVU51UWp0RlFVTkJPMGxCUTBRc2JVSkJRVUU3UlVOdVJFRTdSVUZEUVR0SlFVTkJMR2RDUVVGQk8wVkJRMEU3UlVGRFF6dEpRVU5GTEdWQlFXVTdTVUZEWml4clFrRkJhMEk3UlVGRGNFSTdPenM3T3pzN08wRkJVVVlzZVVOQlFXZENPMEZCUTJoQ08wbEJRMGs3VFVGRFJTeHpSRUZCWlR0TlFVTm1MR0ZCUVdFN1NVRkRaanRGUVVOR096dEZRVVZCTERCRFFVRnJRanRGUVVOc1FqdEpRVU5GTEZkQlFWYzdTVUZEV0R0TlFVTkZMRGhFUVVGQk8wMUJRMEVzV1VGQldUdE5RVU5rTEdGQlFVRTdUVUZEUkN4eFFrRkJRVHRKUVVORE8wbEJRMEVzWlVGQlpUczdTVUZGWml4alFVRmpPMGxCUTJRN1RVRkRSU3h4UkVGQlpUdE5RVU5tTEdGQlFVRTdTVUZEUmp0SlFVTkJMR3RDUVVGQk8wVkJRMFk3TzBWQlJVRXNlVU5CUVRSQ08wVkJRelZDTzBsQlEwVXNZMEZCWXp0SlFVTmtPMDFCUTBVc2NVUkJRV003VFVGRFpDeGhRVUZCTzBsQlEwWTdTVUZEUVN4clFrRkJhMEk3UlVGRGNFSTdPMFZCUlVFc0swTkJRWE5ETzBWQlEzUkRPMGxCUTBVc1YwRkJWenRKUVVOWU8wMUJRMFVzYVVKQlFXbENPMDFCUTJwQ0xGbEJRVms3U1VGRFpEdEpRVU5FTEcxQ1FVRkJMRzlDUVVGQk8wMUJRMGNzYVVKQlFXbENPMDFCUTJwQ0xHTkJRV01zUlVGQlJTd3JRa0ZCUlR0SlFVTndRanRKUVVOQkxHdENRVUZyUWl4blFrRkJaMEk3VFVGRGFFTXNaVUZCWlR0TlFVTm1MR2RDUVVGblFqdEpRVU5zUWp0SlFVTkVMSE5DUVVGQkxGZEJRVUU3VFVGRFJ5eFpRVUZaTzBsQlEyUTdPMGxCUlVFc2NVSkJRV3RDTERSQ1FVRkJPMDFCUTJoQ0xHZENRVUZsTzBsQlEycENPMGxCUTBFc01FSkJRVEJDTERaQ1FVRkhPMDFCUXpOQ0xHTkJRV003VFVGRFpDeHBRa0ZCUVR0SlFVTkdPenRKUVVWQk8wMUJRMFVzWjBKQlFXZENPMDFCUTJoQ0xHTkJRV003VFVGRFpDeGpRVUZCTzAxQlEwRXNZVUZCWVR0TlFVTm9RaXh6UWtGQlFUdE5RVU5ITEhsQ1FVRlhPMDFCUTFnc1kwRkJZenRKUVVOb1FqdEpRVU5CTzAxQlEwVXNaVUZCUVR0TlFVTkJMR1ZCUVdVN1RVRkRaaXh2UWtGQmIwSTdUVUZEY0VJc2VVSkJRVUU3U1VGRFJqdEpRVU5CTEdWQlFXTTdPMGxCUldRc1YwRkJWenRKUVVOYU8wMUJRMGNzYlVKQlFXTTdUVUZEWkN4clFrRkJhMEk3U1VGRGNFSTdTVUZEUVR0TlFVTkZMR2RDUVVGQkxFVkJRVUVzTWtOQlFVRTdTVUZEUmp0SlFVTkJPMDFCUTBVc1ZVRkJWVHRKUVVOYU8wbEJRMEVzWlVGQlpUczdTVUZGWml4alFVRkZPMGxCUTBZN1RVRkRSU3huUWtGQlowSTdUVUZEYUVJc1ZVRkJRVHRKUVVOR08wbEJRMEU3VFVGRFJTeFpRVUZCTzAxQlEwWXNiVUpCUVVFN1NVRkRSRHRKUVVOQk8wMUJRMGNzYTBKQlFXdENPMGxCUTNCQ08wbEJRMEU3VFVGRFJTeHJRa0ZCYTBJN1NVRkRjRUk3U1VGRFFUdE5RVU5GTEd0Q1FVRkJPMGxCUTBZN1JVRkRSanM3TzBWQlIwRXNNRVZCUVd0Q08wVkJRMnhDTzBsQlEwVXNWMEZCUlR0SlFVTklMRzFDUVVGQkxHOUNRVUZCTzAxQlEwY3NaMEpCUVZrN1RVRkRXaXhqUVVGak8wbEJRMmhDTzBsQlEwRXNaVUZCWlRzN1NVRkZaaXhqUVVGak8wbEJRMlE3VFVGRFJTeFpRVUZCTzAxQlEwWXNiVUpCUVVFN1NVRkRSRHM3U1VGRlFUdE5RVU5HTEd0Q1FVRkJPMDFEYTA5TExHVkJRV1U3VFVGRFppeHRRa0ZCYlVJN1RVRkRia0lzYTBKQlFXdENPMDFCUTJ4Q0xGZEJRVmM3VFVGRFdDeFhRVUZYTzBsQlEySTdSVUZEUmlJc0ltWnBiR1VpT2lKdFlXbHVMbU56Y3lJc0luTnZkWEpqWlhORGIyNTBaVzUwSWpwYklpOHFLaUJJUlVGRVJWSWdLaW92WEhKY2JpTm9aV0ZrWlhJdGJtRjJJSHRjY2x4dUlDQWdJR0poWTJ0bmNtOTFibVF0WTI5c2IzSTZJQ05tTm1Jek1UazdYSEpjYmlBZ0lDQmliM0prWlhJdGNtRmthWFZ6T2lBd08xeHlYRzRnSUNBZ1ltOXlaR1Z5T2lBd08xeHlYRzRnSUgxY2NseHVJQ0JjY2x4dUlDQWpiRzluYnkxcGJXY2dlMXh5WEc0Z0lDQWdZbUZqYTJkeWIzVnVaRG9nZFhKc0tDY3VMaTlwYldjdmNtVnpkR0YxY21GdWRDMXNiMmR2WDJ4aGNtZGxMbkJ1WnljcElHNXZMWEpsY0dWaGREdGNjbHh1SUNBZ0lIZHBaSFJvT2lBeE5UQndlRHRjY2x4dUlDQWdJR2hsYVdkb2REb2dNVFV3Y0hnN1hISmNiaUFnSUNCdFlYSm5hVzQ2SURFd2NIZ2dNVFZ3ZUNBeE1IQjRJREE3WEhKY2JpQWdmVnh5WEc0Z0lGeHlYRzRnSUM1dVlYWmlZWEl0WW5KaGJtUWdlMXh5WEc0Z0lDQWdjR0ZrWkdsdVp5MTBiM0E2SURJMWNIZzdYSEpjYmlBZ2ZWeHlYRzRnSUM1dVlYWmlZWEl0WW5KaGJtUWdhREVnZXlBdktpQlNaWE4wWVhWeVlXNTBJRzVoYldVZ0tpOWNjbHh1SUNBZ0lHWnZiblF0Wm1GdGFXeDVPaUFuVEc5eVlTY3NJSE5sY21sbU8xeHlYRzRnSUNBZ1kyOXNiM0k2SUNNMU5UZGpNMlU3WEhKY2JpQWdJQ0JtYjI1MExYTnBlbVU2SURFdU5XVnRPMXh5WEc0Z0lDQWdkR1Y0ZEMxMGNtRnVjMlp2Y20wNklIVndjR1Z5WTJGelpUdGNjbHh1SUNBZ0lHWnZiblF0ZDJWcFoyaDBPaUJpYjJ4a08xeHlYRzRnSUNBZ2RHVjRkQzF6YUdGa2IzYzZJREZ3ZUNBeGNIZ2dNWEI0SUNNeU1qSTdYSEpjYmlBZ0lDQnRZWEpuYVc0dGRHOXdPaUF3TzF4eVhHNGdJQ0FnYldGeVoybHVMV0p2ZEhSdmJUb2dNRHRjY2x4dUlDQWdJR3hwYm1VdGFHVnBaMmgwT2lBdU56VTdYSEpjYmlBZ2ZWeHlYRzRnSUM1dVlYWmlZWEl0WW5KaGJtUWdZVHBvYjNabGNpd2dMbTVoZG1KaGNpMWljbUZ1WkNCaE9tWnZZM1Z6SUh0Y2NseHVJQ0FnSUhSbGVIUXRaR1ZqYjNKaGRHbHZiam9nYm05dVpUdGNjbHh1SUNCOVhISmNiaUFnTG01aGRtSmhjaTFpY21GdVpDQndJSHNnTHlvZ1MyOXphR1Z5SUdObGNuUWdLaTljY2x4dUlDQWdJR052Ykc5eU9pQWpNREF3TzF4eVhHNGdJQ0FnZEdWNGRDMTBjbUZ1YzJadmNtMDZJSFZ3Y0dWeVkyRnpaVHRjY2x4dUlDQWdJR1p2Ym5RdGMybDZaVG9nTGpkbGJUdGNjbHh1SUNBZ0lHMWhjbWRwYmkxMGIzQTZJREUxY0hnN1hISmNiaUFnZlZ4eVhHNGdJQzV1WVhaaVlYSXRZbkpoYm1RZ2NDQnpjR0Z1SUhzZ0x5b2dVM1JoY2kxTElDb3ZYSEpjYmlBZ0lDQjJaWEowYVdOaGJDMWhiR2xuYmpvZ2JXbGtaR3hsTzF4eVhHNGdJSDFjY2x4dUlDQmNjbHh1SUNBamJtRjJMV3hwYzNRZ2UxeHlYRzRnSUNBZ2JXRnlaMmx1TFhSdmNEb2dNVEJ3ZUR0Y2NseHVJQ0I5WEhKY2JpQWdJMjVoZGkxc2FYTjBJR0VnZTF4eVhHNGdJQ0FnWTI5c2IzSTZJQ001TlRGRE5EazdYSEpjYmlBZ0lDQjBaWGgwTFdGc2FXZHVPaUJqWlc1MFpYSTdYSEpjYmlBZ2ZWeHlYRzRnSUNOdVlYWXRiR2x6ZENCaE9taHZkbVZ5SUh0Y2NseHVJQ0FnSUdKaFkydG5jbTkxYm1RNklDTkZOMFUzUlRjN1hISmNiaUFnZlZ4eVhHNGdJQ051WVhZdGJHbHpkQ0JoSUhOd1lXNGdlMXh5WEc0Z0lDQWdabTl1ZEMxemFYcGxPaUF4TGpobGJUdGNjbHh1SUNCOVhISmNiaUFnWEhKY2JpQWdJM0JvYjI1bElIdGNjbHh1SUNBZ0lHMWhjbWRwYmkxMGIzQTZJRFZ3ZUR0Y2NseHVJQ0I5WEhKY2JpQWdJM0JvYjI1bElHRWdleUF2S2lCUWFHOXVaU0J1ZFcxaVpYSWdLaTljY2x4dUlDQWdJSFJsZUhRdFlXeHBaMjQ2SUhKcFoyaDBPMXh5WEc0Z0lDQWdjR0ZrWkdsdVp5MWliM1IwYjIwNklEQTdYSEpjYmlBZ2ZWeHlYRzRnSUNOd2FHOXVaU0JrYVhZZ2V5QXZLaUJYWlNCRVpXeHBkbVZ5SUNvdlhISmNiaUFnSUNCamIyeHZjam9nSXpVMU4yTXpaVHRjY2x4dUlDQWdJSFJsZUhRdFlXeHBaMjQ2SUhKcFoyaDBPMXh5WEc0Z0lDQWdjR0ZrWkdsdVp5MXlhV2RvZERvZ01UVndlRHRjY2x4dUlDQjlYSEpjYmlBZ1hISmNiaUFnTG01aGRtSmhjaTFvWldGa1pYSWdZblYwZEc5dUxtNWhkbUpoY2kxMGIyZG5iR1VzSUM1dVlYWmlZWEl0YUdWaFpHVnlJQzVwWTI5dUxXSmhjaUI3WEhKY2JpQWdJQ0JpYjNKa1pYSTZJREZ3ZUNCemIyeHBaQ0FqTmpFeE1qSm1PMXh5WEc0Z0lIMWNjbHh1SUNBdWJtRjJZbUZ5TFdobFlXUmxjaUJpZFhSMGIyNHVibUYyWW1GeUxYUnZaMmRzWlNCN1hISmNiaUFnSUNCamJHVmhjam9nWW05MGFEdGNjbHh1SUNBZ0lHMWhjbWRwYmkxMGIzQTZJQzB6TUhCNE8xeHlYRzRnSUgxY2NseHVJQ0F2S2lCRlRrUWdTRVZCUkVWU0lDb3ZJaXdpTHlvZ1JrOVBWRVZTSUNvdlhISmNiaTV3WVc1bGJDMW1iMjkwWlhJZ2UxeHlYRzRnSUNBZ2JXRnlaMmx1TFhSdmNEb2dNekJ3ZUR0Y2NseHVJQ0FnSUhCaFpHUnBibWN0ZEc5d09pQXpOWEI0TzF4eVhHNGdJQ0FnY0dGa1pHbHVaeTFpYjNSMGIyMDZJRE13Y0hnN1hISmNiaUFnSUNCaVlXTnJaM0p2ZFc1a0xXTnZiRzl5T2lBak1qSXlPMXh5WEc0Z0lDQWdZbTl5WkdWeUxYUnZjRG9nTUR0Y2NseHVJQ0I5WEhKY2JpQWdMbkJoYm1Wc0xXWnZiM1JsY2lCa2FYWXVjbTkzSUh0Y2NseHVJQ0FnSUcxaGNtZHBiaTFpYjNSMGIyMDZJRE0xY0hnN1hISmNiaUFnZlZ4eVhHNGdJQ05vYjNWeWN5d2dJMkZrWkhKbGMzTWdlMXh5WEc0Z0lDQWdiR2x1WlMxb1pXbG5hSFE2SURJN1hISmNiaUFnZlZ4eVhHNGdJQ05vYjNWeWN5QStJSE53WVc0c0lDTmhaR1J5WlhOeklENGdjM0JoYmlCN1hISmNiaUFnSUNCbWIyNTBMWE5wZW1VNklERXVNMlZ0TzF4eVhHNGdJSDFjY2x4dUlDQWpZV1JrY21WemN5QndJSHRjY2x4dUlDQWdJR052Ykc5eU9pQWpOVFUzWXpObE8xeHlYRzRnSUNBZ1ptOXVkQzF6YVhwbE9pQXVPR1Z0TzF4eVhHNGdJQ0FnYkdsdVpTMW9aV2xuYUhRNklERXVPRHRjY2x4dUlDQjlYSEpjYmlBZ0kzUmxjM1JwYlc5dWFXRnNjeUI3WEhKY2JpQWdJQ0JtYjI1MExYTjBlV3hsT2lCcGRHRnNhV003WEhKY2JpQWdmVnh5WEc0Z0lDTjBaWE4wYVcxdmJtbGhiSE1nY0RwdWRHZ3RZMmhwYkdRb01pa2dlMXh5WEc0Z0lDQWdiV0Z5WjJsdUxYUnZjRG9nTWpWd2VEdGNjbHh1SUNCOVhISmNiaUFnTHlvZ1JVNUVJRVpQVDFSRlVpQXFMMXh5WEc0Z0lDSXNJaThxSUVoUFRVVWdVRUZIUlNBcUwxeHlYRzR1WTI5dWRHRnBibVZ5SUM1cWRXMWliM1J5YjI0Z2UxeHlYRzRnSUNBZ1ltOTRMWE5vWVdSdmR6b2dNQ0F3SURVd2NIZ2dJek5HTUVNeFJqdGNjbHh1SUNBZ0lHSnZjbVJsY2pvZ01uQjRJSE52Ykdsa0lDTXpSakJETVVZN1hISmNiaUFnZlZ4eVhHNGdJRnh5WEc0Z0lDTnRaVzUxTFhScGJHVXNJQ056Y0dWamFXRnNjeTEwYVd4bExDQWpiV0Z3TFhScGJHVWdlMXh5WEc0Z0lDQWdhR1ZwWjJoME9pQXlOVEJ3ZUR0Y2NseHVJQ0FnSUhkcFpIUm9PaUF4TURBbE8xeHlYRzRnSUNBZ2JXRnlaMmx1TFdKdmRIUnZiVG9nTVRWd2VEdGNjbHh1SUNBZ0lIQnZjMmwwYVc5dU9pQnlaV3hoZEdsMlpUdGNjbHh1SUNBZ0lHSnZjbVJsY2pvZ01uQjRJSE52Ykdsa0lDTXpSakJETVVZN1hISmNiaUFnSUNCdmRtVnlabXh2ZHpvZ2FHbGtaR1Z1TzF4eVhHNGdJSDFjY2x4dUlDQWpiV1Z1ZFMxMGFXeGxPbWh2ZG1WeUxDQWpjM0JsWTJsaGJITXRkR2xzWlRwb2IzWmxjaXdnSTIxaGNDMTBhV3hsT21odmRtVnlJSHRjY2x4dUlDQWdJR0p2ZUMxemFHRmtiM2M2SURBZ01YQjRJRFZ3ZUNBeGNIZ2dJMk5qWTJOall6dGNjbHh1SUNCOVhISmNiaUFnSTIxbGJuVXRkR2xzWlNCN1hISmNiaUFnSUNCaVlXTnJaM0p2ZFc1a09pQjFjbXdvSnk0dUwybHRaeTl0Wlc1MUxYUnBiR1V1YW5Cbkp5a2dibTh0Y21Wd1pXRjBPMXh5WEc0Z0lDQWdZbUZqYTJkeWIzVnVaQzF3YjNOcGRHbHZiam9nWTJWdWRHVnlPMXh5WEc0Z0lIMWNjbHh1SUNBamMzQmxZMmxoYkhNdGRHbHNaU0I3WEhKY2JpQWdJQ0JpWVdOclozSnZkVzVrT2lCMWNtd29KeTR1TDJsdFp5OXpjR1ZqYVdGc2N5MTBhV3hsTG1wd1p5Y3BJRzV2TFhKbGNHVmhkRHRjY2x4dUlDQWdJR0poWTJ0bmNtOTFibVF0Y0c5emFYUnBiMjQ2SUdObGJuUmxjanRjY2x4dUlDQjlYSEpjYmlBZ0kyMWxiblV0ZEdsc1pTQnpjR0Z1TENBamMzQmxZMmxoYkhNdGRHbHNaU0J6Y0dGdUxDQWpiV0Z3TFhScGJHVWdjM0JoYmlCN1hISmNiaUFnSUNCd2IzTnBkR2x2YmpvZ1lXSnpiMngxZEdVN1hISmNiaUFnSUNCaWIzUjBiMjA2SURBN1hISmNiaUFnSUNCeWFXZG9kRG9nTUR0Y2NseHVJQ0FnSUhkcFpIUm9PaUF4TURBbE8xeHlYRzRnSUNBZ2RHVjRkQzFoYkdsbmJqb2dZMlZ1ZEdWeU8xeHlYRzRnSUNBZ1ptOXVkQzF6YVhwbE9pQXhMalpsYlR0Y2NseHVJQ0FnSUhSbGVIUXRkSEpoYm5ObWIzSnRPaUIxY0hCbGNtTmhjMlU3WEhKY2JpQWdJQ0JpWVdOclozSnZkVzVrTFdOdmJHOXlPaUFqTURBd08xeHlYRzRnSUNBZ1kyOXNiM0k2SUNObVptWTdYSEpjYmlBZ0lDQnZjR0ZqYVhSNU9pQXVPRHRjY2x4dUlDQjlYSEpjYmlBZ0x5b2dSVTVFSUVoUFRVVWdVRUZIUlNBcUx5SXNJaThxSUUxRlRsVWdRMEZVUlVkUFVrbEZVeUJRUVVkRklDb3ZYSEpjYmk1allYUmxaMjl5ZVMxMGFXeGxJSHNnWEhKY2JpQWdJQ0J3YjNOcGRHbHZiam9nY21Wc1lYUnBkbVU3WEhKY2JpQWdJQ0JpYjNKa1pYSTZJREp3ZUNCemIyeHBaQ0FqTTBZd1F6RkdPMXh5WEc0Z0lDQWdiM1psY21ac2IzYzZJR2hwWkdSbGJqdGNjbHh1SUNBZ0lIZHBaSFJvT2lBeU1EQndlRHRjY2x4dUlDQWdJR2hsYVdkb2REb2dNakF3Y0hnN1hISmNiaUFnSUNCdFlYSm5hVzQ2SURBZ1lYVjBieUF4TlhCNE8xeHlYRzRnSUgxY2NseHVJQ0F1WTJGMFpXZHZjbmt0ZEdsc1pTQnpjR0Z1SUh0Y2NseHVJQ0FnSUhCdmMybDBhVzl1T2lCaFluTnZiSFYwWlR0Y2NseHVJQ0FnSUdKdmRIUnZiVG9nTUR0Y2NseHVJQ0FnSUhKcFoyaDBPaUF3TzF4eVhHNGdJQ0FnZDJsa2RHZzZJREV3TUNVN1hISmNiaUFnSUNCMFpYaDBMV0ZzYVdkdU9pQmpaVzUwWlhJN1hISmNiaUFnSUNCbWIyNTBMWE5wZW1VNklERXVNbVZ0TzF4eVhHNGdJQ0FnZEdWNGRDMTBjbUZ1YzJadmNtMDZJSFZ3Y0dWeVkyRnpaVHRjY2x4dUlDQWdJR0poWTJ0bmNtOTFibVF0WTI5c2IzSTZJQ013TURBN1hISmNiaUFnSUNCamIyeHZjam9nSTJabVpqdGNjbHh1SUNBZ0lHOXdZV05wZEhrNklDNDRPMXh5WEc0Z0lIMWNjbHh1SUNBdVkyRjBaV2R2Y25rdGRHbHNaVHBvYjNabGNpQjdYSEpjYmlBZ0lDQmliM2d0YzJoaFpHOTNPaUF3SURGd2VDQTFjSGdnTVhCNElDTmpZMk5qWTJNN1hISmNiaUFnZlZ4eVhHNGdJRnh5WEc0Z0lDTnRaVzUxTFdOaGRHVm5iM0pwWlhNdGRHbDBiR1VnS3lCa2FYWWdlMXh5WEc0Z0lDQWdiV0Z5WjJsdUxXSnZkSFJ2YlRvZ05UQndlRHRjY2x4dUlDQjlYSEpjYmlBZ0x5b2dSVTVFSUUxRlRsVWdRMEZVUlVkUFVrbEZVeUJRUVVkRklDb3ZJaXdpSUNBamJXVnVkUzFqWVhSbFoyOXllUzEwYVhSc1pTdGthWFo3WEhKY2JpQWdJQ0J0WVhKbmFXNHRZbTkwZEc5dE9pQTFOWEI0TzF4eVhHNGdJSDFjY2x4dUlDQXViV1Z1ZFMxcGRHVnRMWFJwYkdVZ2UxeHlYRzRnSUNBZ2JXRnlaMmx1TFdKdmRIUnZiVG9nTWpWd2VEdGNjbHh1SUNCOVhISmNiaUFnTG0xbGJuVXRhWFJsYlMxMGFXeGxJR2h5SUh0Y2NseHVJQ0FnSUhkcFpIUm9PaUE0TUNVN1hISmNiaUFnZlZ4eVhHNGdJQzV0Wlc1MUxXbDBaVzB0ZEdsc1pTQXViV1Z1ZFMxcGRHVnRMWEJ5YVdObElIdGNjbHh1SUNBZ0lHWnZiblF0YzJsNlpUb2dNUzR4WlcwN1hISmNiaUFnSUNCMFpYaDBMV0ZzYVdkdU9pQnlhV2RvZER0Y2NseHVJQ0FnSUcxaGNtZHBiaTEwYjNBNklDMHhOWEI0TzF4eVhHNGdJQ0FnYldGeVoybHVMWEpwWjJoME9pQXRNVFZ3ZUR0Y2NseHVJQ0I5WEhKY2JpQWdMbTFsYm5VdGFYUmxiUzEwYVd4bElDNXRaVzUxTFdsMFpXMHRjSEpwWTJVZ2MzQmhiaUI3WEhKY2JpQWdJQ0JtYjI1MExYTnBlbVU2SUM0MlpXMDdYSEpjYmlBZ0lDQndZV1JrYVc1bkxXeGxablE2SURWd2VEdGNjbHh1SUNBZ0lIQmhaR1JwYm1jdGNtbG5hSFE2SURWd2VEdGNjbHh1SUNCOVhISmNiaUFnTG0xbGJuVXRhWFJsYlMxd2NtbGpaU0J6Y0dGdU9tNTBhQzFqYUdsc1pDZ3lLWHRjY2x4dUlDQWdJQ0FnSUhCaFpHUnBibWN0Y21sbmFIUTZJREE3WEhKY2JpQWdmVnh5WEc0Z0lDNXRaVzUxTFdsMFpXMHRjR2h2ZEc4Z2UxeHlYRzRnSUNBZ2NHOXphWFJwYjI0NklISmxiR0YwYVhabE8xeHlYRzRnSUNBZ1ltOXlaR1Z5T2lBeWNIZ2djMjlzYVdRZ0l6TkdNRU14UmpzZ1hISmNiaUFnSUNCdmRtVnlabXh2ZHpvZ2FHbGtaR1Z1TzF4eVhHNGdJQ0FnY0dGa1pHbHVaem9nTUR0Y2NseHVJQ0FnSUcxaGNtZHBiaTF5YVdkb2REb2dMVEUxY0hnN1hISmNiaUFnSUNCdFlYSm5hVzR0YkdWbWREb2dZWFYwYnp0Y2NseHVJQ0FnSUcxaGNtZHBiaTFpYjNSMGIyMDZJREl3Y0hnN1hISmNiaUFnSUNCdFlYZ3RkMmxrZEdnNklESTFNSEI0TzF4eVhHNGdJSDFjY2x4dUlDQXViV1Z1ZFMxcGRHVnRMWEJvYjNSdklHUnBkaUI3WEhKY2JpQWdJQ0J3YjNOcGRHbHZiam9nWVdKemIyeDFkR1U3WEhKY2JpQWdJQ0JpYjNSMGIyMDZJREE3WEhKY2JpQWdJQ0J5YVdkb2REb2dNRHRjY2x4dUlDQWdJSGRwWkhSb09pQTRNSEI0TzF4eVhHNGdJQ0FnWW1GamEyZHliM1Z1WkMxamIyeHZjam9nSXpVMU4yTXpaVHRjY2x4dUlDQWdJSFJsZUhRdFlXeHBaMjQ2SUdObGJuUmxjanRjY2x4dUlDQjlYSEpjYmlBZ0xtMWxiblV0YVhSbGJTMWtaWE5qY21sd2RHbHZiaUI3WEhKY2JpQWdJQ0J3WVdSa2FXNW5MWEpwWjJoME9pQXpNSEI0TzF4eVhHNGdJSDFjY2x4dUlDQm9NeTV0Wlc1MUxXbDBaVzB0ZEdsMGJHVWdlMXh5WEc0Z0lDQWdiV0Z5WjJsdU9pQXdJREFnTVRCd2VEdGNjbHh1SUNCOVhISmNiaUFnTG0xbGJuVXRhWFJsYlMxa1pYUmhhV3h6SUh0Y2NseHVJQ0FnSUdadmJuUXRjMmw2WlRvZ0xqbGxiVHRjY2x4dUlDQWdJR1p2Ym5RdGMzUjViR1U2SUdsMFlXeHBZenRjY2x4dUlDQjlYSEpjYmlBZ0lpd2lYSEpjYmx4eVhHNWNjbHh1WEhKY2JpOHFLaW9xS2lvcUtpb3FJRXhoY21kbElHUmxkbWxqWlhNZ2IyNXNlU0FxS2lvcUtpb3FLaW9xTDF4eVhHNUFiV1ZrYVdFZ0tHMXBiaTEzYVdSMGFEb2dNVEl3TUhCNEtTQjdYSEpjYmlBZ0lDQXVZMjl1ZEdGcGJtVnlJQzVxZFcxaWIzUnliMjRnZTF4eVhHNGdJQ0FnSUNCaVlXTnJaM0p2ZFc1a09pQjFjbXdvSnk0dUwybHRaeTlxZFcxaWIzUnliMjVmTVRJd01DNXFjR2NuS1NCdWJ5MXlaWEJsWVhRN1hISmNiaUFnSUNBZ0lHaGxhV2RvZERvZ05qYzFjSGc3WEhKY2JpQWdJQ0I5WEhKY2JpQWdmVnh5WEc0Z0lGeHlYRzRnSUM4cUtpb3FLaW9xS2lvcUlFMWxaR2wxYlNCa1pYWnBZMlZ6SUc5dWJIa2dLaW9xS2lvcUtpb3FLaTljY2x4dUlDQkFiV1ZrYVdFZ0tHMXBiaTEzYVdSMGFEb2dPVGt5Y0hncElHRnVaQ0FvYldGNExYZHBaSFJvT2lBeE1UazVjSGdwSUh0Y2NseHVJQ0FnSUM4cUlFaGxZV1JsY2lBcUwxeHlYRzRnSUNBZ0kyeHZaMjh0YVcxbklIdGNjbHh1SUNBZ0lDQWdZbUZqYTJkeWIzVnVaRG9nZFhKc0tDY3VMaTlwYldjdmNtVnpkR0YxY21GdWRDMXNiMmR2WDIxbFpHbDFiUzV3Ym1jbktTQnVieTF5WlhCbFlYUTdYSEpjYmlBZ0lDQWdJSGRwWkhSb09pQXhNREJ3ZUR0Y2NseHVJQ0FnSUNBZ2FHVnBaMmgwT2lBeE1EQndlRHRjY2x4dUlDQWdJQ0FnYldGeVoybHVPaUExY0hnZ05YQjRJRFZ3ZUNBd08xeHlYRzRnSUNBZ2ZWeHlYRzRnSUNBZ0x5b2dSVzVrSUVobFlXUmxjaUFxTDF4eVhHNGdJRnh5WEc0Z0lDQWdMeW9nU0c5dFpTQlFZV2RsSUNvdlhISmNiaUFnSUNBdVkyOXVkR0ZwYm1WeUlDNXFkVzFpYjNSeWIyNGdlMXh5WEc0Z0lDQWdJQ0JpWVdOclozSnZkVzVrT2lCMWNtd29KeTR1TDJsdFp5OXFkVzFpYjNSeWIyNWZPVGt5TG1wd1p5Y3BJRzV2TFhKbGNHVmhkRHRjY2x4dUlDQWdJQ0FnYUdWcFoyaDBPaUExTlRod2VEdGNjbHh1SUNBZ0lIMWNjbHh1SUNBZ0lDOHFJRVZ1WkNCSWIyMWxJRkJoWjJVZ0tpOWNjbHh1SUNCOVhISmNiaUFnWEhKY2JpQWdMeW9xS2lvcUtpb3FLaW9nVTIxaGJHd2daR1YyYVdObGN5QnZibXg1SUNvcUtpb3FLaW9xS2lvdlhISmNiaUFnUUcxbFpHbGhJQ2h0YVc0dGQybGtkR2c2SURjMk9IQjRLU0JoYm1RZ0tHMWhlQzEzYVdSMGFEb2dPVGt4Y0hncElIdGNjbHh1SUNBZ0lDOHFJRWh2YldVZ1VHRm5aU0FxTDF4eVhHNGdJQ0FnTG1OdmJuUmhhVzVsY2lBdWFuVnRZbTkwY205dUlIdGNjbHh1SUNBZ0lDQWdZbUZqYTJkeWIzVnVaRG9nZFhKc0tDY3VMaTlwYldjdmFuVnRZbTkwY205dVh6YzJPQzVxY0djbktTQnVieTF5WlhCbFlYUTdYSEpjYmlBZ0lDQWdJR2hsYVdkb2REb2dORE15Y0hnN1hISmNiaUFnSUNCOVhISmNiaUFnSUNBdktpQkZibVFnU0c5dFpTQlFZV2RsSUNvdlhISmNiaUFnZlZ4eVhHNGdJRnh5WEc0Z0lDOHFLaW9xS2lvcUtpb3FJRVY0ZEhKaElITnRZV3hzSUdSbGRtbGpaWE1nYjI1c2VTQXFLaW9xS2lvcUtpb3FMMXh5WEc0Z0lFQnRaV1JwWVNBb2JXRjRMWGRwWkhSb09pQTNOamR3ZUNrZ2UxeHlYRzRnSUNBZ0x5b2dTR1ZoWkdWeUlDb3ZYSEpjYmlBZ0lDQXVibUYyWW1GeUxXSnlZVzVrSUh0Y2NseHVJQ0FnSUNBZ2NHRmtaR2x1WnkxMGIzQTZJREV3Y0hnN1hISmNiaUFnSUNBZ0lHaGxhV2RvZERvZ09EQndlRHRjY2x4dUlDQWdJSDFjY2x4dUlDQWdJQzV1WVhaaVlYSXRZbkpoYm1RZ2FERWdleUF2S2lCU1pYTjBZWFZ5WVc1MElHNWhiV1VnS2k5Y2NseHVJQ0FnSUNBZ2NHRmtaR2x1WnkxMGIzQTZJREV3Y0hnN1hISmNiaUFnSUNBZ0lHWnZiblF0YzJsNlpUb2dOWFozT3lBdktpQXhkbmNnUFNBeEpTQnZaaUIyYVdWM2NHOXlkQ0IzYVdSMGFDQXFMMXh5WEc0Z0lDQWdmVnh5WEc0Z0lDQWdMbTVoZG1KaGNpMWljbUZ1WkNCd0lIc2dMeW9nUzI5emFHVnlJR05sY25RZ0tpOWNjbHh1SUNBZ0lDQWdabTl1ZEMxemFYcGxPaUF1Tm1WdE8xeHlYRzRnSUNBZ0lDQnRZWEpuYVc0dGRHOXdPaUF4TW5CNE8xeHlYRzRnSUNBZ2ZWeHlYRzRnSUNBZ0xtNWhkbUpoY2kxaWNtRnVaQ0J3SUdsdFp5QjdJQzhxSUZOMFlYSXRTeUFxTDF4eVhHNGdJQ0FnSUNCb1pXbG5hSFE2SURJd2NIZzdYSEpjYmlBZ0lDQjlYSEpjYmlBZ1hISmNiaUFnSUNBalkyOXNiR0Z3YzJGaWJHVXRibUYySUdFZ2V5QXZLaUJEYjJ4c1lYQnpaV1FnYm1GMklHMWxiblVnZEdWNGRDQXFMMXh5WEc0Z0lDQWdJQ0JtYjI1MExYTnBlbVU2SURFdU1tVnRPMXh5WEc0Z0lDQWdmVnh5WEc0Z0lDQWdJMk52Ykd4aGNITmhZbXhsTFc1aGRpQmhJSE53WVc0Z2V5QXZLaUJEYjJ4c1lYQnpaV1FnYm1GMklHMWxiblVnWjJ4NWNHZ2dLaTljY2x4dUlDQWdJQ0FnWm05dWRDMXphWHBsT2lBeFpXMDdYSEpjYmlBZ0lDQWdJRzFoY21kcGJpMXlhV2RvZERvZ05YQjRPMXh5WEc0Z0lDQWdmVnh5WEc0Z0lGeHlYRzRnSUNBZ0kyTmhiR3d0WW5SdUlENGdZU0I3WEhKY2JpQWdJQ0FnSUdadmJuUXRjMmw2WlRvZ01TNDFaVzA3WEhKY2JpQWdJQ0FnSUdScGMzQnNZWGs2SUdKc2IyTnJPMXh5WEc0Z0lDQWdJQ0J0WVhKbmFXNDZJREFnTWpCd2VEdGNjbHh1SUNBZ0lDQWdjR0ZrWkdsdVp6b2dNVEJ3ZUR0Y2NseHVJQ0FnSUNBZ1ltOXlaR1Z5T2lBeWNIZ2djMjlzYVdRZ0kyWm1aanRjY2x4dUlDQWdJQ0FnWW1GamEyZHliM1Z1WkMxamIyeHZjam9nSTJZMllqTXhPVHRjY2x4dUlDQWdJQ0FnWTI5c2IzSTZJQ001TlRGak5EazdYSEpjYmlBZ0lDQjlYSEpjYmlBZ0lDQWplSE10WkdWc2FYWmxjaUI3WEhKY2JpQWdJQ0FnSUcxaGNtZHBiaTEwYjNBNklEVndlRHRjY2x4dUlDQWdJQ0FnWm05dWRDMXphWHBsT2lBdU4yVnRPMXh5WEc0Z0lDQWdJQ0JzWlhSMFpYSXRjM0JoWTJsdVp6b2dMakZsYlR0Y2NseHVJQ0FnSUNBZ2RHVjRkQzEwY21GdWMyWnZjbTA2SUhWd2NHVnlZMkZ6WlR0Y2NseHVJQ0FnSUgxY2NseHVJQ0FnSUM4cUlFVnVaQ0JJWldGa1pYSWdLaTljY2x4dUlDQmNjbHh1SUNBZ0lDOHFJRVp2YjNSbGNpQXFMMXh5WEc0Z0lDQWdMbkJoYm1Wc0xXWnZiM1JsY2lCelpXTjBhVzl1SUh0Y2NseHVJQ0FnSUNBZ2JXRnlaMmx1TFdKdmRIUnZiVG9nTXpCd2VEdGNjbHh1SUNBZ0lDQWdkR1Y0ZEMxaGJHbG5iam9nWTJWdWRHVnlPMXh5WEc0Z0lDQWdmVnh5WEc0Z0lDQWdMbkJoYm1Wc0xXWnZiM1JsY2lCelpXTjBhVzl1T201MGFDMWphR2xzWkNnektTQjdYSEpjYmlBZ0lDQWdJRzFoY21kcGJpMWliM1IwYjIwNklEQTdJQzhxSUcxaGNtZHBiaUJoYkhKbFlXUjVJR1Y0YVhOMGN5QnZiaUIwYUdVZ2QyaHZiR1VnY205M0lDb3ZYSEpjYmlBZ0lDQjlYSEpjYmlBZ0lDQXVjR0Z1Wld3dFptOXZkR1Z5SUhObFkzUnBiMjRnYUhJZ2UxeHlYRzRnSUNBZ0lDQjNhV1IwYURvZ05UQWxPMXh5WEc0Z0lDQWdmVnh5WEc0Z0lDQWdMeW9nUlc1a0lFWnZiM1JsY2lBcUwxeHlYRzRnSUZ4eVhHNGdJQ0FnTHlvZ1NHOXRaU0JRWVdkbElDb3ZYSEpjYmlBZ0lDQXVZMjl1ZEdGcGJtVnlJQzVxZFcxaWIzUnliMjRnZTF4eVhHNGdJQ0FnSUNCdFlYSm5hVzR0ZEc5d09pQXpNSEI0TzF4eVhHNGdJQ0FnSUNCd1lXUmthVzVuT2lBd08xeHlYRzRnSUNBZ2ZWeHlYRzRnSUNBZ0kyMWxiblV0ZEdsc1pTd2dJM053WldOcFlXeHpMWFJwYkdVZ2UxeHlYRzRnSUNBZ0lDQjNhV1IwYURvZ016WXdjSGc3WEhKY2JpQWdJQ0FnSUcxaGNtZHBiam9nTUNCaGRYUnZJREUxY0hnN1hISmNiaUFnSUNCOVhISmNiaUFnSUNBdWJXVnVkUzFwZEdWdExYQm9iM1J2ZTF4eVhHNGdJQ0FnSUNCdFlYSm5hVzR0Y21sbmFIUTZJR0YxZEc4N1hISmNiaUFnSUNCOVhISmNiaUFnSUNBdWJXVnVkUzFwZEdWdExYUnBiR1VnTG0xbGJuVXRhWFJsYlMxd2NtbGpaWHRjY2x4dUlDQWdJQ0FnZEdWNGRDMWhiR2xuYmpvZ1kyVnVkR1Z5TzF4eVhHNGdJQ0FnZlZ4eVhHNGdJQ0FnTG0xbGJuVXRhWFJsYlMxa1pYTmpjbWx3ZEdsdmJudGNjbHh1SUNBZ0lDQWdkR1Y0ZEMxaGJHbG5iam9nWTJWdWRHVnlPMXh5WEc0Z0lDQWdmVnh5WEc0Z0lIMWNjbHh1SUNCY2NseHVJQ0JjY2x4dUlDQXZLaW9xS2lvcUtpb3FLaUJUZFhCbGNpQmxlSFJ5WVNCemJXRnNiQ0JrWlhacFkyVnpJRTl1YkhrZ09pMHBJQ2hsTG1jdUxDQnBVR2h2Ym1VZ05Da2dLaW9xS2lvcUtpb3FLaTljY2x4dUlDQkFiV1ZrYVdFZ0tHMWhlQzEzYVdSMGFEb2dORGM1Y0hncElIdGNjbHh1SUNBZ0lDOHFJRWhsWVdSbGNpQXFMMXh5WEc0Z0lDQWdMbTVoZG1KaGNpMWljbUZ1WkNCb01TQjdJQzhxSUZKbGMzUmhkWEpoYm5RZ2JtRnRaU0FxTDF4eVhHNGdJQ0FnSUNCd1lXUmthVzVuTFhSdmNEb2dOWEI0TzF4eVhHNGdJQ0FnSUNCbWIyNTBMWE5wZW1VNklEWjJkenRjY2x4dUlDQWdJSDFjY2x4dUlDQWdJQzhxSUVWdVpDQklaV0ZrWlhJZ0tpOWNjbHh1SUNBZ0lGeHlYRzRnSUNBZ0x5b2dTRzl0WlNCd1lXZGxJQ292WEhKY2JpQWdJQ0FqYldWdWRTMTBhV3hsTENBamMzQmxZMmxoYkhNdGRHbHNaU0I3WEhKY2JpQWdJQ0FnSUhkcFpIUm9PaUF5T0RCd2VEdGNjbHh1SUNBZ0lDQWdiV0Z5WjJsdU9pQXdJR0YxZEc4Z01UVndlRHRjY2x4dUlDQWdJSDFjY2x4dUlDQmNjbHh1SUNBZ0lDNWpiMnd0ZUhoekxURXlJSHRjY2x4dUlDQWdJQ0FnY0c5emFYUnBiMjQ2SUhKbGJHRjBhWFpsTzF4eVhHNGdJQ0FnSUNCdGFXNHRhR1ZwWjJoME9pQXhjSGc3WEhKY2JpQWdJQ0FnSUhCaFpHUnBibWN0Y21sbmFIUTZJREUxY0hnN1hISmNiaUFnSUNBZ0lIQmhaR1JwYm1jdGJHVm1kRG9nTVRWd2VEdGNjbHh1SUNBZ0lDQWdabXh2WVhRNklHeGxablE3WEhKY2JpQWdJQ0FnSUhkcFpIUm9PaUF4TURBbE8xeHlYRzRnSUNBZ2ZWeHlYRzRnSUgxY2NseHVJQ0JjY2x4dUlDQmNjbHh1SUNCY2NseHVJQ0FpTENJcWUxeHlYRzRnSUNBZ1ltOTRMWE5wZW1sdVp6b2dZbTl5WkdWeUxXSnZlRHRjY2x4dWZWeHlYRzVpYjJSNWUxeHlYRzRnSUNBZ1ptOXVkQzF6YVhwbE9pQXhObkI0TzF4eVhHNGdJQ0FnWTI5c2IzSTZJQ05tWm1ZN1hISmNiaUFnSUNCaVlXTnJaM0p2ZFc1a0xXTnZiRzl5T2lBak5qRXhNakptTzF4eVhHNGdJQ0FnWm05dWRDMW1ZVzFwYkhrNklDZFBlSGxuWlc0bkxDQnpZVzV6TFhObGNtbG1PMXh5WEc1OVhISmNiaThxS2lCSVJVRkVSVklnS2lvdlhISmNiaU5vWldGa1pYSXRibUYySUh0Y2NseHVJQ0FnSUdKaFkydG5jbTkxYm1RdFkyOXNiM0k2SUNObU5tSXpNVGs3WEhKY2JpQWdJQ0JpYjNKa1pYSXRjbUZrYVhWek9pQXdPMXh5WEc0Z0lDQWdZbTl5WkdWeU9pQXdPMXh5WEc0Z0lIMWNjbHh1SUNCY2NseHVJQ0FqYkc5bmJ5MXBiV2NnZTF4eVhHNGdJQ0FnWW1GamEyZHliM1Z1WkRvZ2RYSnNLQ2N1TGk5cGJXY3ZjbVZ6ZEdGMWNtRnVkQzFzYjJkdlgyeGhjbWRsTG5CdVp5Y3BJRzV2TFhKbGNHVmhkRHRjY2x4dUlDQWdJSGRwWkhSb09pQXhOVEJ3ZUR0Y2NseHVJQ0FnSUdobGFXZG9kRG9nTVRVd2NIZzdYSEpjYmlBZ0lDQnRZWEpuYVc0NklERXdjSGdnTVRWd2VDQXhNSEI0SURBN1hISmNiaUFnZlZ4eVhHNGdJRnh5WEc0Z0lDNXVZWFppWVhJdFluSmhibVFnZTF4eVhHNGdJQ0FnY0dGa1pHbHVaeTEwYjNBNklESTFjSGc3WEhKY2JpQWdmVnh5WEc0Z0lDNXVZWFppWVhJdFluSmhibVFnYURFZ2V5QXZLaUJTWlhOMFlYVnlZVzUwSUc1aGJXVWdLaTljY2x4dUlDQWdJR1p2Ym5RdFptRnRhV3g1T2lBblRHOXlZU2NzSUhObGNtbG1PMXh5WEc0Z0lDQWdZMjlzYjNJNklDTTFOVGRqTTJVN1hISmNiaUFnSUNCbWIyNTBMWE5wZW1VNklERXVOV1Z0TzF4eVhHNGdJQ0FnZEdWNGRDMTBjbUZ1YzJadmNtMDZJSFZ3Y0dWeVkyRnpaVHRjY2x4dUlDQWdJR1p2Ym5RdGQyVnBaMmgwT2lCaWIyeGtPMXh5WEc0Z0lDQWdkR1Y0ZEMxemFHRmtiM2M2SURGd2VDQXhjSGdnTVhCNElDTXlNakk3WEhKY2JpQWdJQ0J0WVhKbmFXNHRkRzl3T2lBd08xeHlYRzRnSUNBZ2JXRnlaMmx1TFdKdmRIUnZiVG9nTUR0Y2NseHVJQ0FnSUd4cGJtVXRhR1ZwWjJoME9pQXVOelU3WEhKY2JpQWdmVnh5WEc0Z0lDNXVZWFppWVhJdFluSmhibVFnWVRwb2IzWmxjaXdnTG01aGRtSmhjaTFpY21GdVpDQmhPbVp2WTNWeklIdGNjbHh1SUNBZ0lIUmxlSFF0WkdWamIzSmhkR2x2YmpvZ2JtOXVaVHRjY2x4dUlDQjlYSEpjYmlBZ0xtNWhkbUpoY2kxaWNtRnVaQ0J3SUhzZ0x5b2dTMjl6YUdWeUlHTmxjblFnS2k5Y2NseHVJQ0FnSUdOdmJHOXlPaUFqTURBd08xeHlYRzRnSUNBZ2RHVjRkQzEwY21GdWMyWnZjbTA2SUhWd2NHVnlZMkZ6WlR0Y2NseHVJQ0FnSUdadmJuUXRjMmw2WlRvZ0xqZGxiVHRjY2x4dUlDQWdJRzFoY21kcGJpMTBiM0E2SURFMWNIZzdYSEpjYmlBZ2ZWeHlYRzRnSUM1dVlYWmlZWEl0WW5KaGJtUWdjQ0J6Y0dGdUlIc2dMeW9nVTNSaGNpMUxJQ292WEhKY2JpQWdJQ0IyWlhKMGFXTmhiQzFoYkdsbmJqb2diV2xrWkd4bE8xeHlYRzRnSUgxY2NseHVJQ0JjY2x4dUlDQWpibUYyTFd4cGMzUWdlMXh5WEc0Z0lDQWdiV0Z5WjJsdUxYUnZjRG9nTVRCd2VEdGNjbHh1SUNCOVhISmNiaUFnSTI1aGRpMXNhWE4wSUdFZ2UxeHlYRzRnSUNBZ1kyOXNiM0k2SUNNNU5URkRORGs3WEhKY2JpQWdJQ0IwWlhoMExXRnNhV2R1T2lCalpXNTBaWEk3WEhKY2JpQWdmVnh5WEc0Z0lDTnVZWFl0YkdsemRDQmhPbWh2ZG1WeUlIdGNjbHh1SUNBZ0lHSmhZMnRuY205MWJtUTZJQ05GTjBVM1JUYzdYSEpjYmlBZ2ZWeHlYRzRnSUNOdVlYWXRiR2x6ZENCaElITndZVzRnZTF4eVhHNGdJQ0FnWm05dWRDMXphWHBsT2lBeExqaGxiVHRjY2x4dUlDQjlYSEpjYmlBZ1hISmNiaUFnSTNCb2IyNWxJSHRjY2x4dUlDQWdJRzFoY21kcGJpMTBiM0E2SURWd2VEdGNjbHh1SUNCOVhISmNiaUFnSTNCb2IyNWxJR0VnZXlBdktpQlFhRzl1WlNCdWRXMWlaWElnS2k5Y2NseHVJQ0FnSUhSbGVIUXRZV3hwWjI0NklISnBaMmgwTzF4eVhHNGdJQ0FnY0dGa1pHbHVaeTFpYjNSMGIyMDZJREE3WEhKY2JpQWdmVnh5WEc0Z0lDTndhRzl1WlNCa2FYWWdleUF2S2lCWFpTQkVaV3hwZG1WeUlDb3ZYSEpjYmlBZ0lDQmpiMnh2Y2pvZ0l6VTFOMk16WlR0Y2NseHVJQ0FnSUhSbGVIUXRZV3hwWjI0NklISnBaMmgwTzF4eVhHNGdJQ0FnY0dGa1pHbHVaeTF5YVdkb2REb2dNVFZ3ZUR0Y2NseHVJQ0I5WEhKY2JpQWdYSEpjYmlBZ0xtNWhkbUpoY2kxb1pXRmtaWElnWW5WMGRHOXVMbTVoZG1KaGNpMTBiMmRuYkdVc0lDNXVZWFppWVhJdGFHVmhaR1Z5SUM1cFkyOXVMV0poY2lCN1hISmNiaUFnSUNCaWIzSmtaWEk2SURGd2VDQnpiMnhwWkNBak5qRXhNakptTzF4eVhHNGdJSDFjY2x4dUlDQXVibUYyWW1GeUxXaGxZV1JsY2lCaWRYUjBiMjR1Ym1GMlltRnlMWFJ2WjJkc1pTQjdYSEpjYmlBZ0lDQmpiR1ZoY2pvZ1ltOTBhRHRjY2x4dUlDQWdJRzFoY21kcGJpMTBiM0E2SUMwek1IQjRPMXh5WEc0Z0lIMWNjbHh1SUNBdktpQkZUa1FnU0VWQlJFVlNJQ292WEhKY2JpOHFJRVpQVDFSRlVpQXFMMXh5WEc0dWNHRnVaV3d0Wm05dmRHVnlJSHRjY2x4dUlDQWdJRzFoY21kcGJpMTBiM0E2SURNd2NIZzdYSEpjYmlBZ0lDQndZV1JrYVc1bkxYUnZjRG9nTXpWd2VEdGNjbHh1SUNBZ0lIQmhaR1JwYm1jdFltOTBkRzl0T2lBek1IQjRPMXh5WEc0Z0lDQWdZbUZqYTJkeWIzVnVaQzFqYjJ4dmNqb2dJekl5TWp0Y2NseHVJQ0FnSUdKdmNtUmxjaTEwYjNBNklEQTdYSEpjYmlBZ2ZWeHlYRzRnSUM1d1lXNWxiQzFtYjI5MFpYSWdaR2wyTG5KdmR5QjdYSEpjYmlBZ0lDQnRZWEpuYVc0dFltOTBkRzl0T2lBek5YQjRPMXh5WEc0Z0lIMWNjbHh1SUNBamFHOTFjbk1zSUNOaFpHUnlaWE56SUh0Y2NseHVJQ0FnSUd4cGJtVXRhR1ZwWjJoME9pQXlPMXh5WEc0Z0lIMWNjbHh1SUNBamFHOTFjbk1nUGlCemNHRnVMQ0FqWVdSa2NtVnpjeUErSUhOd1lXNGdlMXh5WEc0Z0lDQWdabTl1ZEMxemFYcGxPaUF4TGpObGJUdGNjbHh1SUNCOVhISmNiaUFnSTJGa1pISmxjM01nY0NCN1hISmNiaUFnSUNCamIyeHZjam9nSXpVMU4yTXpaVHRjY2x4dUlDQWdJR1p2Ym5RdGMybDZaVG9nTGpobGJUdGNjbHh1SUNBZ0lHeHBibVV0YUdWcFoyaDBPaUF4TGpnN1hISmNiaUFnZlZ4eVhHNGdJQ04wWlhOMGFXMXZibWxoYkhNZ2UxeHlYRzRnSUNBZ1ptOXVkQzF6ZEhsc1pUb2dhWFJoYkdsak8xeHlYRzRnSUgxY2NseHVJQ0FqZEdWemRHbHRiMjVwWVd4eklIQTZiblJvTFdOb2FXeGtLRElwSUh0Y2NseHVJQ0FnSUcxaGNtZHBiaTEwYjNBNklESTFjSGc3WEhKY2JpQWdmVnh5WEc0Z0lDOHFJRVZPUkNCR1QwOVVSVklnS2k5Y2NseHVJQ0JjY2x4dUx5b2dTRTlOUlNCUVFVZEZJQ292WEhKY2JpNWpiMjUwWVdsdVpYSWdMbXAxYldKdmRISnZiaUI3WEhKY2JpQWdJQ0JpYjNndGMyaGhaRzkzT2lBd0lEQWdOVEJ3ZUNBak0wWXdRekZHTzF4eVhHNGdJQ0FnWW05eVpHVnlPaUF5Y0hnZ2MyOXNhV1FnSXpOR01FTXhSanRjY2x4dUlDQjlYSEpjYmlBZ1hISmNiaUFnSTIxbGJuVXRkR2xzWlN3Z0kzTndaV05wWVd4ekxYUnBiR1VzSUNOdFlYQXRkR2xzWlNCN1hISmNiaUFnSUNCb1pXbG5hSFE2SURJMU1IQjRPMXh5WEc0Z0lDQWdkMmxrZEdnNklERXdNQ1U3WEhKY2JpQWdJQ0J0WVhKbmFXNHRZbTkwZEc5dE9pQXhOWEI0TzF4eVhHNGdJQ0FnY0c5emFYUnBiMjQ2SUhKbGJHRjBhWFpsTzF4eVhHNGdJQ0FnWW05eVpHVnlPaUF5Y0hnZ2MyOXNhV1FnSXpOR01FTXhSanRjY2x4dUlDQWdJRzkyWlhKbWJHOTNPaUJvYVdSa1pXNDdYSEpjYmlBZ2ZWeHlYRzRnSUNOdFpXNTFMWFJwYkdVNmFHOTJaWElzSUNOemNHVmphV0ZzY3kxMGFXeGxPbWh2ZG1WeUxDQWpiV0Z3TFhScGJHVTZhRzkyWlhJZ2UxeHlYRzRnSUNBZ1ltOTRMWE5vWVdSdmR6b2dNQ0F4Y0hnZ05YQjRJREZ3ZUNBalkyTmpZMk5qTzF4eVhHNGdJSDFjY2x4dUlDQWpiV1Z1ZFMxMGFXeGxJSHRjY2x4dUlDQWdJR0poWTJ0bmNtOTFibVE2SUhWeWJDZ25MaTR2YVcxbkwyMWxiblV0ZEdsc1pTNXFjR2NuS1NCdWJ5MXlaWEJsWVhRN1hISmNiaUFnSUNCaVlXTnJaM0p2ZFc1a0xYQnZjMmwwYVc5dU9pQmpaVzUwWlhJN1hISmNiaUFnZlZ4eVhHNGdJQ056Y0dWamFXRnNjeTEwYVd4bElIdGNjbHh1SUNBZ0lHSmhZMnRuY205MWJtUTZJSFZ5YkNnbkxpNHZhVzFuTDNOd1pXTnBZV3h6TFhScGJHVXVhbkJuSnlrZ2JtOHRjbVZ3WldGME8xeHlYRzRnSUNBZ1ltRmphMmR5YjNWdVpDMXdiM05wZEdsdmJqb2dZMlZ1ZEdWeU8xeHlYRzRnSUgxY2NseHVJQ0FqYldWdWRTMTBhV3hsSUhOd1lXNHNJQ056Y0dWamFXRnNjeTEwYVd4bElITndZVzRzSUNOdFlYQXRkR2xzWlNCemNHRnVJSHRjY2x4dUlDQWdJSEJ2YzJsMGFXOXVPaUJoWW5OdmJIVjBaVHRjY2x4dUlDQWdJR0p2ZEhSdmJUb2dNRHRjY2x4dUlDQWdJSEpwWjJoME9pQXdPMXh5WEc0Z0lDQWdkMmxrZEdnNklERXdNQ1U3WEhKY2JpQWdJQ0IwWlhoMExXRnNhV2R1T2lCalpXNTBaWEk3WEhKY2JpQWdJQ0JtYjI1MExYTnBlbVU2SURFdU5tVnRPMXh5WEc0Z0lDQWdkR1Y0ZEMxMGNtRnVjMlp2Y20wNklIVndjR1Z5WTJGelpUdGNjbHh1SUNBZ0lHSmhZMnRuY205MWJtUXRZMjlzYjNJNklDTXdNREE3WEhKY2JpQWdJQ0JqYjJ4dmNqb2dJMlptWmp0Y2NseHVJQ0FnSUc5d1lXTnBkSGs2SUM0NE8xeHlYRzRnSUgxY2NseHVJQ0F2S2lCRlRrUWdTRTlOUlNCUVFVZEZJQ292WEhKY2JpOHFJRTFGVGxVZ1EwRlVSVWRQVWtsRlV5QlFRVWRGSUNvdlhISmNiaTVqWVhSbFoyOXllUzEwYVd4bElIc2dYSEpjYmlBZ0lDQndiM05wZEdsdmJqb2djbVZzWVhScGRtVTdYSEpjYmlBZ0lDQmliM0prWlhJNklESndlQ0J6YjJ4cFpDQWpNMFl3UXpGR08xeHlYRzRnSUNBZ2IzWmxjbVpzYjNjNklHaHBaR1JsYmp0Y2NseHVJQ0FnSUhkcFpIUm9PaUF5TURCd2VEdGNjbHh1SUNBZ0lHaGxhV2RvZERvZ01qQXdjSGc3WEhKY2JpQWdJQ0J0WVhKbmFXNDZJREFnWVhWMGJ5QXhOWEI0TzF4eVhHNGdJSDFjY2x4dUlDQXVZMkYwWldkdmNua3RkR2xzWlNCemNHRnVJSHRjY2x4dUlDQWdJSEJ2YzJsMGFXOXVPaUJoWW5OdmJIVjBaVHRjY2x4dUlDQWdJR0p2ZEhSdmJUb2dNRHRjY2x4dUlDQWdJSEpwWjJoME9pQXdPMXh5WEc0Z0lDQWdkMmxrZEdnNklERXdNQ1U3WEhKY2JpQWdJQ0IwWlhoMExXRnNhV2R1T2lCalpXNTBaWEk3WEhKY2JpQWdJQ0JtYjI1MExYTnBlbVU2SURFdU1tVnRPMXh5WEc0Z0lDQWdkR1Y0ZEMxMGNtRnVjMlp2Y20wNklIVndjR1Z5WTJGelpUdGNjbHh1SUNBZ0lHSmhZMnRuY205MWJtUXRZMjlzYjNJNklDTXdNREE3WEhKY2JpQWdJQ0JqYjJ4dmNqb2dJMlptWmp0Y2NseHVJQ0FnSUc5d1lXTnBkSGs2SUM0NE8xeHlYRzRnSUgxY2NseHVJQ0F1WTJGMFpXZHZjbmt0ZEdsc1pUcG9iM1psY2lCN1hISmNiaUFnSUNCaWIzZ3RjMmhoWkc5M09pQXdJREZ3ZUNBMWNIZ2dNWEI0SUNOalkyTmpZMk03WEhKY2JpQWdmVnh5WEc0Z0lGeHlYRzRnSUNOdFpXNTFMV05oZEdWbmIzSnBaWE10ZEdsMGJHVWdLeUJrYVhZZ2UxeHlYRzRnSUNBZ2JXRnlaMmx1TFdKdmRIUnZiVG9nTlRCd2VEdGNjbHh1SUNCOVhISmNiaUFnTHlvZ1JVNUVJRTFGVGxVZ1EwRlVSVWRQVWtsRlV5QlFRVWRGSUNvdlhISmNiaUFnSTIxbGJuVXRZMkYwWldkdmNua3RkR2wwYkdVclpHbDJlMXh5WEc0Z0lDQWdiV0Z5WjJsdUxXSnZkSFJ2YlRvZ05UVndlRHRjY2x4dUlDQjlYSEpjYmlBZ0xtMWxiblV0YVhSbGJTMTBhV3hsSUh0Y2NseHVJQ0FnSUcxaGNtZHBiaTFpYjNSMGIyMDZJREkxY0hnN1hISmNiaUFnZlZ4eVhHNGdJQzV0Wlc1MUxXbDBaVzB0ZEdsc1pTQm9jaUI3WEhKY2JpQWdJQ0IzYVdSMGFEb2dPREFsTzF4eVhHNGdJSDFjY2x4dUlDQXViV1Z1ZFMxcGRHVnRMWFJwYkdVZ0xtMWxiblV0YVhSbGJTMXdjbWxqWlNCN1hISmNiaUFnSUNCbWIyNTBMWE5wZW1VNklERXVNV1Z0TzF4eVhHNGdJQ0FnZEdWNGRDMWhiR2xuYmpvZ2NtbG5hSFE3WEhKY2JpQWdJQ0J0WVhKbmFXNHRkRzl3T2lBdE1UVndlRHRjY2x4dUlDQWdJRzFoY21kcGJpMXlhV2RvZERvZ0xURTFjSGc3WEhKY2JpQWdmVnh5WEc0Z0lDNXRaVzUxTFdsMFpXMHRkR2xzWlNBdWJXVnVkUzFwZEdWdExYQnlhV05sSUhOd1lXNGdlMXh5WEc0Z0lDQWdabTl1ZEMxemFYcGxPaUF1Tm1WdE8xeHlYRzRnSUNBZ2NHRmtaR2x1Wnkxc1pXWjBPaUExY0hnN1hISmNiaUFnSUNCd1lXUmthVzVuTFhKcFoyaDBPaUExY0hnN1hISmNiaUFnZlZ4eVhHNGdJQzV0Wlc1MUxXbDBaVzB0Y0hKcFkyVWdjM0JoYmpwdWRHZ3RZMmhwYkdRb01pbDdYSEpjYmlBZ0lDQWdJQ0J3WVdSa2FXNW5MWEpwWjJoME9pQXdPMXh5WEc0Z0lIMWNjbHh1SUNBdWJXVnVkUzFwZEdWdExYQm9iM1J2SUh0Y2NseHVJQ0FnSUhCdmMybDBhVzl1T2lCeVpXeGhkR2wyWlR0Y2NseHVJQ0FnSUdKdmNtUmxjam9nTW5CNElITnZiR2xrSUNNelJqQkRNVVk3SUZ4eVhHNGdJQ0FnYjNabGNtWnNiM2M2SUdocFpHUmxianRjY2x4dUlDQWdJSEJoWkdScGJtYzZJREE3WEhKY2JpQWdJQ0J0WVhKbmFXNHRjbWxuYUhRNklDMHhOWEI0TzF4eVhHNGdJQ0FnYldGeVoybHVMV3hsWm5RNklHRjFkRzg3WEhKY2JpQWdJQ0J0WVhKbmFXNHRZbTkwZEc5dE9pQXlNSEI0TzF4eVhHNGdJQ0FnYldGNExYZHBaSFJvT2lBeU5UQndlRHRjY2x4dUlDQjlYSEpjYmlBZ0xtMWxiblV0YVhSbGJTMXdhRzkwYnlCa2FYWWdlMXh5WEc0Z0lDQWdjRzl6YVhScGIyNDZJR0ZpYzI5c2RYUmxPMXh5WEc0Z0lDQWdZbTkwZEc5dE9pQXdPMXh5WEc0Z0lDQWdjbWxuYUhRNklEQTdYSEpjYmlBZ0lDQjNhV1IwYURvZ09EQndlRHRjY2x4dUlDQWdJR0poWTJ0bmNtOTFibVF0WTI5c2IzSTZJQ00xTlRkak0yVTdYSEpjYmlBZ0lDQjBaWGgwTFdGc2FXZHVPaUJqWlc1MFpYSTdYSEpjYmlBZ2ZWeHlYRzRnSUM1dFpXNTFMV2wwWlcwdFpHVnpZM0pwY0hScGIyNGdlMXh5WEc0Z0lDQWdjR0ZrWkdsdVp5MXlhV2RvZERvZ016QndlRHRjY2x4dUlDQjlYSEpjYmlBZ2FETXViV1Z1ZFMxcGRHVnRMWFJwZEd4bElIdGNjbHh1SUNBZ0lHMWhjbWRwYmpvZ01DQXdJREV3Y0hnN1hISmNiaUFnZlZ4eVhHNGdJQzV0Wlc1MUxXbDBaVzB0WkdWMFlXbHNjeUI3WEhKY2JpQWdJQ0JtYjI1MExYTnBlbVU2SUM0NVpXMDdYSEpjYmlBZ0lDQm1iMjUwTFhOMGVXeGxPaUJwZEdGc2FXTTdYSEpjYmlBZ2ZWeHlYRzRnSUZ4eVhHNWNjbHh1WEhKY2JseHlYRzVjY2x4dVhISmNibHh5WEc0dktpb3FLaW9xS2lvcUtpQk1ZWEpuWlNCa1pYWnBZMlZ6SUc5dWJIa2dLaW9xS2lvcUtpb3FLaTljY2x4dVFHMWxaR2xoSUNodGFXNHRkMmxrZEdnNklERXlNREJ3ZUNrZ2UxeHlYRzRnSUNBZ0xtTnZiblJoYVc1bGNpQXVhblZ0WW05MGNtOXVJSHRjY2x4dUlDQWdJQ0FnWW1GamEyZHliM1Z1WkRvZ2RYSnNLQ2N1TGk5cGJXY3ZhblZ0WW05MGNtOXVYekV5TURBdWFuQm5KeWtnYm04dGNtVndaV0YwTzF4eVhHNGdJQ0FnSUNCb1pXbG5hSFE2SURZM05YQjRPMXh5WEc0Z0lDQWdmVnh5WEc0Z0lIMWNjbHh1SUNCY2NseHVJQ0F2S2lvcUtpb3FLaW9xS2lCTlpXUnBkVzBnWkdWMmFXTmxjeUJ2Ym14NUlDb3FLaW9xS2lvcUtpb3ZYSEpjYmlBZ1FHMWxaR2xoSUNodGFXNHRkMmxrZEdnNklEazVNbkI0S1NCaGJtUWdLRzFoZUMxM2FXUjBhRG9nTVRFNU9YQjRLU0I3WEhKY2JpQWdJQ0F2S2lCSVpXRmtaWElnS2k5Y2NseHVJQ0FnSUNOc2IyZHZMV2x0WnlCN1hISmNiaUFnSUNBZ0lHSmhZMnRuY205MWJtUTZJSFZ5YkNnbkxpNHZhVzFuTDNKbGMzUmhkWEpoYm5RdGJHOW5iMTl0WldScGRXMHVjRzVuSnlrZ2JtOHRjbVZ3WldGME8xeHlYRzRnSUNBZ0lDQjNhV1IwYURvZ01UQXdjSGc3WEhKY2JpQWdJQ0FnSUdobGFXZG9kRG9nTVRBd2NIZzdYSEpjYmlBZ0lDQWdJRzFoY21kcGJqb2dOWEI0SURWd2VDQTFjSGdnTUR0Y2NseHVJQ0FnSUgxY2NseHVJQ0FnSUM4cUlFVnVaQ0JJWldGa1pYSWdLaTljY2x4dUlDQmNjbHh1SUNBZ0lDOHFJRWh2YldVZ1VHRm5aU0FxTDF4eVhHNGdJQ0FnTG1OdmJuUmhhVzVsY2lBdWFuVnRZbTkwY205dUlIdGNjbHh1SUNBZ0lDQWdZbUZqYTJkeWIzVnVaRG9nZFhKc0tDY3VMaTlwYldjdmFuVnRZbTkwY205dVh6azVNaTVxY0djbktTQnVieTF5WlhCbFlYUTdYSEpjYmlBZ0lDQWdJR2hsYVdkb2REb2dOVFU0Y0hnN1hISmNiaUFnSUNCOVhISmNiaUFnSUNBdktpQkZibVFnU0c5dFpTQlFZV2RsSUNvdlhISmNiaUFnZlZ4eVhHNGdJRnh5WEc0Z0lDOHFLaW9xS2lvcUtpb3FJRk50WVd4c0lHUmxkbWxqWlhNZ2IyNXNlU0FxS2lvcUtpb3FLaW9xTDF4eVhHNGdJRUJ0WldScFlTQW9iV2x1TFhkcFpIUm9PaUEzTmpod2VDa2dZVzVrSUNodFlYZ3RkMmxrZEdnNklEazVNWEI0S1NCN1hISmNiaUFnSUNBdktpQkliMjFsSUZCaFoyVWdLaTljY2x4dUlDQWdJQzVqYjI1MFlXbHVaWElnTG1wMWJXSnZkSEp2YmlCN1hISmNiaUFnSUNBZ0lHSmhZMnRuY205MWJtUTZJSFZ5YkNnbkxpNHZhVzFuTDJwMWJXSnZkSEp2Ymw4M05qZ3VhbkJuSnlrZ2JtOHRjbVZ3WldGME8xeHlYRzRnSUNBZ0lDQm9aV2xuYUhRNklEUXpNbkI0TzF4eVhHNGdJQ0FnZlZ4eVhHNGdJQ0FnTHlvZ1JXNWtJRWh2YldVZ1VHRm5aU0FxTDF4eVhHNGdJSDFjY2x4dUlDQmNjbHh1SUNBdktpb3FLaW9xS2lvcUtpQkZlSFJ5WVNCemJXRnNiQ0JrWlhacFkyVnpJRzl1YkhrZ0tpb3FLaW9xS2lvcUtpOWNjbHh1SUNCQWJXVmthV0VnS0cxaGVDMTNhV1IwYURvZ056WTNjSGdwSUh0Y2NseHVJQ0FnSUM4cUlFaGxZV1JsY2lBcUwxeHlYRzRnSUNBZ0xtNWhkbUpoY2kxaWNtRnVaQ0I3WEhKY2JpQWdJQ0FnSUhCaFpHUnBibWN0ZEc5d09pQXhNSEI0TzF4eVhHNGdJQ0FnSUNCb1pXbG5hSFE2SURnd2NIZzdYSEpjYmlBZ0lDQjlYSEpjYmlBZ0lDQXVibUYyWW1GeUxXSnlZVzVrSUdneElIc2dMeW9nVW1WemRHRjFjbUZ1ZENCdVlXMWxJQ292WEhKY2JpQWdJQ0FnSUhCaFpHUnBibWN0ZEc5d09pQXhNSEI0TzF4eVhHNGdJQ0FnSUNCbWIyNTBMWE5wZW1VNklEVjJkenNnTHlvZ01YWjNJRDBnTVNVZ2IyWWdkbWxsZDNCdmNuUWdkMmxrZEdnZ0tpOWNjbHh1SUNBZ0lIMWNjbHh1SUNBZ0lDNXVZWFppWVhJdFluSmhibVFnY0NCN0lDOHFJRXR2YzJobGNpQmpaWEowSUNvdlhISmNiaUFnSUNBZ0lHWnZiblF0YzJsNlpUb2dMalpsYlR0Y2NseHVJQ0FnSUNBZ2JXRnlaMmx1TFhSdmNEb2dNVEp3ZUR0Y2NseHVJQ0FnSUgxY2NseHVJQ0FnSUM1dVlYWmlZWEl0WW5KaGJtUWdjQ0JwYldjZ2V5QXZLaUJUZEdGeUxVc2dLaTljY2x4dUlDQWdJQ0FnYUdWcFoyaDBPaUF5TUhCNE8xeHlYRzRnSUNBZ2ZWeHlYRzRnSUZ4eVhHNGdJQ0FnSTJOdmJHeGhjSE5oWW14bExXNWhkaUJoSUhzZ0x5b2dRMjlzYkdGd2MyVmtJRzVoZGlCdFpXNTFJSFJsZUhRZ0tpOWNjbHh1SUNBZ0lDQWdabTl1ZEMxemFYcGxPaUF4TGpKbGJUdGNjbHh1SUNBZ0lIMWNjbHh1SUNBZ0lDTmpiMnhzWVhCellXSnNaUzF1WVhZZ1lTQnpjR0Z1SUhzZ0x5b2dRMjlzYkdGd2MyVmtJRzVoZGlCdFpXNTFJR2RzZVhCb0lDb3ZYSEpjYmlBZ0lDQWdJR1p2Ym5RdGMybDZaVG9nTVdWdE8xeHlYRzRnSUNBZ0lDQnRZWEpuYVc0dGNtbG5hSFE2SURWd2VEdGNjbHh1SUNBZ0lIMWNjbHh1SUNCY2NseHVJQ0FnSUNOallXeHNMV0owYmlBK0lHRWdlMXh5WEc0Z0lDQWdJQ0JtYjI1MExYTnBlbVU2SURFdU5XVnRPMXh5WEc0Z0lDQWdJQ0JrYVhOd2JHRjVPaUJpYkc5amF6dGNjbHh1SUNBZ0lDQWdiV0Z5WjJsdU9pQXdJREl3Y0hnN1hISmNiaUFnSUNBZ0lIQmhaR1JwYm1jNklERXdjSGc3WEhKY2JpQWdJQ0FnSUdKdmNtUmxjam9nTW5CNElITnZiR2xrSUNObVptWTdYSEpjYmlBZ0lDQWdJR0poWTJ0bmNtOTFibVF0WTI5c2IzSTZJQ05tTm1Jek1UazdYSEpjYmlBZ0lDQWdJR052Ykc5eU9pQWpPVFV4WXpRNU8xeHlYRzRnSUNBZ2ZWeHlYRzRnSUNBZ0kzaHpMV1JsYkdsMlpYSWdlMXh5WEc0Z0lDQWdJQ0J0WVhKbmFXNHRkRzl3T2lBMWNIZzdYSEpjYmlBZ0lDQWdJR1p2Ym5RdGMybDZaVG9nTGpkbGJUdGNjbHh1SUNBZ0lDQWdiR1YwZEdWeUxYTndZV05wYm1jNklDNHhaVzA3WEhKY2JpQWdJQ0FnSUhSbGVIUXRkSEpoYm5ObWIzSnRPaUIxY0hCbGNtTmhjMlU3WEhKY2JpQWdJQ0I5WEhKY2JpQWdJQ0F2S2lCRmJtUWdTR1ZoWkdWeUlDb3ZYSEpjYmlBZ1hISmNiaUFnSUNBdktpQkdiMjkwWlhJZ0tpOWNjbHh1SUNBZ0lDNXdZVzVsYkMxbWIyOTBaWElnYzJWamRHbHZiaUI3WEhKY2JpQWdJQ0FnSUcxaGNtZHBiaTFpYjNSMGIyMDZJRE13Y0hnN1hISmNiaUFnSUNBZ0lIUmxlSFF0WVd4cFoyNDZJR05sYm5SbGNqdGNjbHh1SUNBZ0lIMWNjbHh1SUNBZ0lDNXdZVzVsYkMxbWIyOTBaWElnYzJWamRHbHZianB1ZEdndFkyaHBiR1FvTXlrZ2UxeHlYRzRnSUNBZ0lDQnRZWEpuYVc0dFltOTBkRzl0T2lBd095QXZLaUJ0WVhKbmFXNGdZV3h5WldGa2VTQmxlR2x6ZEhNZ2IyNGdkR2hsSUhkb2IyeGxJSEp2ZHlBcUwxeHlYRzRnSUNBZ2ZWeHlYRzRnSUNBZ0xuQmhibVZzTFdadmIzUmxjaUJ6WldOMGFXOXVJR2h5SUh0Y2NseHVJQ0FnSUNBZ2QybGtkR2c2SURVd0pUdGNjbHh1SUNBZ0lIMWNjbHh1SUNBZ0lDOHFJRVZ1WkNCR2IyOTBaWElnS2k5Y2NseHVJQ0JjY2x4dUlDQWdJQzhxSUVodmJXVWdVR0ZuWlNBcUwxeHlYRzRnSUNBZ0xtTnZiblJoYVc1bGNpQXVhblZ0WW05MGNtOXVJSHRjY2x4dUlDQWdJQ0FnYldGeVoybHVMWFJ2Y0RvZ016QndlRHRjY2x4dUlDQWdJQ0FnY0dGa1pHbHVaem9nTUR0Y2NseHVJQ0FnSUgxY2NseHVJQ0FnSUNOdFpXNTFMWFJwYkdVc0lDTnpjR1ZqYVdGc2N5MTBhV3hsSUh0Y2NseHVJQ0FnSUNBZ2QybGtkR2c2SURNMk1IQjRPMXh5WEc0Z0lDQWdJQ0J0WVhKbmFXNDZJREFnWVhWMGJ5QXhOWEI0TzF4eVhHNGdJQ0FnZlZ4eVhHNGdJQ0FnTG0xbGJuVXRhWFJsYlMxd2FHOTBiM3RjY2x4dUlDQWdJQ0FnYldGeVoybHVMWEpwWjJoME9pQmhkWFJ2TzF4eVhHNGdJQ0FnZlZ4eVhHNGdJQ0FnTG0xbGJuVXRhWFJsYlMxMGFXeGxJQzV0Wlc1MUxXbDBaVzB0Y0hKcFkyVjdYSEpjYmlBZ0lDQWdJSFJsZUhRdFlXeHBaMjQ2SUdObGJuUmxjanRjY2x4dUlDQWdJSDFjY2x4dUlDQWdJQzV0Wlc1MUxXbDBaVzB0WkdWelkzSnBjSFJwYjI1N1hISmNiaUFnSUNBZ0lIUmxlSFF0WVd4cFoyNDZJR05sYm5SbGNqdGNjbHh1SUNBZ0lIMWNjbHh1SUNCOVhISmNiaUFnWEhKY2JpQWdYSEpjYmlBZ0x5b3FLaW9xS2lvcUtpb2dVM1Z3WlhJZ1pYaDBjbUVnYzIxaGJHd2daR1YyYVdObGN5QlBibXg1SURvdEtTQW9aUzVuTGl3Z2FWQm9iMjVsSURRcElDb3FLaW9xS2lvcUtpb3ZYSEpjYmlBZ1FHMWxaR2xoSUNodFlYZ3RkMmxrZEdnNklEUTNPWEI0S1NCN1hISmNiaUFnSUNBdktpQklaV0ZrWlhJZ0tpOWNjbHh1SUNBZ0lDNXVZWFppWVhJdFluSmhibVFnYURFZ2V5QXZLaUJTWlhOMFlYVnlZVzUwSUc1aGJXVWdLaTljY2x4dUlDQWdJQ0FnY0dGa1pHbHVaeTEwYjNBNklEVndlRHRjY2x4dUlDQWdJQ0FnWm05dWRDMXphWHBsT2lBMmRuYzdYSEpjYmlBZ0lDQjlYSEpjYmlBZ0lDQXZLaUJGYm1RZ1NHVmhaR1Z5SUNvdlhISmNiaUFnSUNCY2NseHVJQ0FnSUM4cUlFaHZiV1VnY0dGblpTQXFMMXh5WEc0Z0lDQWdJMjFsYm5VdGRHbHNaU3dnSTNOd1pXTnBZV3h6TFhScGJHVWdlMXh5WEc0Z0lDQWdJQ0IzYVdSMGFEb2dNamd3Y0hnN1hISmNiaUFnSUNBZ0lHMWhjbWRwYmpvZ01DQmhkWFJ2SURFMWNIZzdYSEpjYmlBZ0lDQjlYSEpjYmlBZ1hISmNiaUFnSUNBdVkyOXNMWGg0Y3kweE1pQjdYSEpjYmlBZ0lDQWdJSEJ2YzJsMGFXOXVPaUJ5Wld4aGRHbDJaVHRjY2x4dUlDQWdJQ0FnYldsdUxXaGxhV2RvZERvZ01YQjRPMXh5WEc0Z0lDQWdJQ0J3WVdSa2FXNW5MWEpwWjJoME9pQXhOWEI0TzF4eVhHNGdJQ0FnSUNCd1lXUmthVzVuTFd4bFpuUTZJREUxY0hnN1hISmNiaUFnSUNBZ0lHWnNiMkYwT2lCc1pXWjBPMXh5WEc0Z0lDQWdJQ0IzYVdSMGFEb2dNVEF3SlR0Y2NseHVJQ0FnSUgxY2NseHVJQ0I5WEhKY2JpQWdYSEpjYmlBZ1hISmNiaUFnWEhKY2JpQWdJbDE5ICovIiwiLyogRk9PVEVSICovXHJcbi5wYW5lbC1mb290ZXIge1xyXG4gICAgbWFyZ2luLXRvcDogMzBweDtcclxuICAgIHBhZGRpbmctdG9wOiAzNXB4O1xyXG4gICAgcGFkZGluZy1ib3R0b206IDMwcHg7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMjIyO1xyXG4gICAgYm9yZGVyLXRvcDogMDtcclxuICB9XHJcbiAgLnBhbmVsLWZvb3RlciBkaXYucm93IHtcclxuICAgIG1hcmdpbi1ib3R0b206IDM1cHg7XHJcbiAgfVxyXG4gICNob3VycywgI2FkZHJlc3Mge1xyXG4gICAgbGluZS1oZWlnaHQ6IDI7XHJcbiAgfVxyXG4gICNob3VycyA+IHNwYW4sICNhZGRyZXNzID4gc3BhbiB7XHJcbiAgICBmb250LXNpemU6IDEuM2VtO1xyXG4gIH1cclxuICAjYWRkcmVzcyBwIHtcclxuICAgIGNvbG9yOiAjNTU3YzNlO1xyXG4gICAgZm9udC1zaXplOiAuOGVtO1xyXG4gICAgbGluZS1oZWlnaHQ6IDEuODtcclxuICB9XHJcbiAgI3Rlc3RpbW9uaWFscyB7XHJcbiAgICBmb250LXN0eWxlOiBpdGFsaWM7XHJcbiAgfVxyXG4gICN0ZXN0aW1vbmlhbHMgcDpudGgtY2hpbGQoMikge1xyXG4gICAgbWFyZ2luLXRvcDogMjVweDtcclxuICB9XHJcbiAgLyogRU5EIEZPT1RFUiAqL1xyXG4gICIsIi8qIEhPTUUgUEFHRSAqL1xyXG4uY29udGFpbmVyIC5qdW1ib3Ryb24ge1xyXG4gICAgYm94LXNoYWRvdzogMCAwIDUwcHggIzNGMEMxRjtcclxuICAgIGJvcmRlcjogMnB4IHNvbGlkICMzRjBDMUY7XHJcbiAgfVxyXG4gIFxyXG4gICNtZW51LXRpbGUsICNzcGVjaWFscy10aWxlLCAjbWFwLXRpbGUge1xyXG4gICAgaGVpZ2h0OiAyNTBweDtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMTVweDtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIGJvcmRlcjogMnB4IHNvbGlkICMzRjBDMUY7XHJcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gIH1cclxuICAjbWVudS10aWxlOmhvdmVyLCAjc3BlY2lhbHMtdGlsZTpob3ZlciwgI21hcC10aWxlOmhvdmVyIHtcclxuICAgIGJveC1zaGFkb3c6IDAgMXB4IDVweCAxcHggI2NjY2NjYztcclxuICB9XHJcbiAgI21lbnUtdGlsZSB7XHJcbiAgICBiYWNrZ3JvdW5kOiB1cmwoJy4uL2ltZy9tZW51LXRpbGUuanBnJykgbm8tcmVwZWF0O1xyXG4gICAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyO1xyXG4gIH1cclxuICAjc3BlY2lhbHMtdGlsZSB7XHJcbiAgICBiYWNrZ3JvdW5kOiB1cmwoJy4uL2ltZy9zcGVjaWFscy10aWxlLmpwZycpIG5vLXJlcGVhdDtcclxuICAgIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlcjtcclxuICB9XHJcbiAgI21lbnUtdGlsZSBzcGFuLCAjc3BlY2lhbHMtdGlsZSBzcGFuLCAjbWFwLXRpbGUgc3BhbiB7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICBib3R0b206IDA7XHJcbiAgICByaWdodDogMDtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgZm9udC1zaXplOiAxLjZlbTtcclxuICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDAwO1xyXG4gICAgY29sb3I6ICNmZmY7XHJcbiAgICBvcGFjaXR5OiAuODtcclxuICB9XHJcbiAgLyogRU5EIEhPTUUgUEFHRSAqLyIsIiAgI21lbnUtY2F0ZWdvcnktdGl0bGUrZGl2e1xyXG4gICAgbWFyZ2luLWJvdHRvbTogNTVweDtcclxuICB9XHJcbiAgLm1lbnUtaXRlbS10aWxlIHtcclxuICAgIG1hcmdpbi1ib3R0b206IDI1cHg7XHJcbiAgfVxyXG4gIC5tZW51LWl0ZW0tdGlsZSBociB7XHJcbiAgICB3aWR0aDogODAlO1xyXG4gIH1cclxuICAubWVudS1pdGVtLXRpbGUgLm1lbnUtaXRlbS1wcmljZSB7XHJcbiAgICBmb250LXNpemU6IDEuMWVtO1xyXG4gICAgdGV4dC1hbGlnbjogcmlnaHQ7XHJcbiAgICBtYXJnaW4tdG9wOiAtMTVweDtcclxuICAgIG1hcmdpbi1yaWdodDogLTE1cHg7XHJcbiAgfVxyXG4gIC5tZW51LWl0ZW0tdGlsZSAubWVudS1pdGVtLXByaWNlIHNwYW4ge1xyXG4gICAgZm9udC1zaXplOiAuNmVtO1xyXG4gICAgcGFkZGluZy1sZWZ0OiA1cHg7XHJcbiAgICBwYWRkaW5nLXJpZ2h0OiA1cHg7XHJcbiAgfVxyXG4gIC5tZW51LWl0ZW0tcHJpY2Ugc3BhbjpudGgtY2hpbGQoMil7XHJcbiAgICAgICBwYWRkaW5nLXJpZ2h0OiAwO1xyXG4gIH1cclxuICAubWVudS1pdGVtLXBob3RvIHtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIGJvcmRlcjogMnB4IHNvbGlkICMzRjBDMUY7IFxyXG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgIHBhZGRpbmc6IDA7XHJcbiAgICBtYXJnaW4tcmlnaHQ6IC0xNXB4O1xyXG4gICAgbWFyZ2luLWxlZnQ6IGF1dG87XHJcbiAgICBtYXJnaW4tYm90dG9tOiAyMHB4O1xyXG4gICAgbWF4LXdpZHRoOiAyNTBweDtcclxuICB9XHJcbiAgLm1lbnUtaXRlbS1waG90byBkaXYge1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgYm90dG9tOiAwO1xyXG4gICAgcmlnaHQ6IDA7XHJcbiAgICB3aWR0aDogODBweDtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICM1NTdjM2U7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgfVxyXG4gIC5tZW51LWl0ZW0tZGVzY3JpcHRpb24ge1xyXG4gICAgcGFkZGluZy1yaWdodDogMzBweDtcclxuICB9XHJcbiAgaDMubWVudS1pdGVtLXRpdGxlIHtcclxuICAgIG1hcmdpbjogMCAwIDEwcHg7XHJcbiAgfVxyXG4gIC5tZW51LWl0ZW0tZGV0YWlscyB7XHJcbiAgICBmb250LXNpemU6IC45ZW07XHJcbiAgICBmb250LXN0eWxlOiBpdGFsaWM7XHJcbiAgfVxyXG4gICIsIi8qIE1FTlUgQ0FURUdPUklFUyBQQUdFICovXHJcbi5jYXRlZ29yeS10aWxlIHsgXHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICBib3JkZXI6IDJweCBzb2xpZCAjM0YwQzFGO1xyXG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgIHdpZHRoOiAyMDBweDtcclxuICAgIGhlaWdodDogMjAwcHg7XHJcbiAgICBtYXJnaW46IDAgYXV0byAxNXB4O1xyXG4gIH1cclxuICAuY2F0ZWdvcnktdGlsZSBzcGFuIHtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIGJvdHRvbTogMDtcclxuICAgIHJpZ2h0OiAwO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICBmb250LXNpemU6IDEuMmVtO1xyXG4gICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICMwMDA7XHJcbiAgICBjb2xvcjogI2ZmZjtcclxuICAgIG9wYWNpdHk6IC44O1xyXG4gIH1cclxuICAuY2F0ZWdvcnktdGlsZTpob3ZlciB7XHJcbiAgICBib3gtc2hhZG93OiAwIDFweCA1cHggMXB4ICNjY2NjY2M7XHJcbiAgfVxyXG4gIFxyXG4gICNtZW51LWNhdGVnb3JpZXMtdGl0bGUgKyBkaXYge1xyXG4gICAgbWFyZ2luLWJvdHRvbTogNTBweDtcclxuICB9XHJcbiAgLyogRU5EIE1FTlUgQ0FURUdPUklFUyBQQUdFICovIiwiXHJcblxyXG5cclxuXHJcbi8qKioqKioqKioqIExhcmdlIGRldmljZXMgb25seSAqKioqKioqKioqL1xyXG5AbWVkaWEgKG1pbi13aWR0aDogMTIwMHB4KSB7XHJcbiAgICAuY29udGFpbmVyIC5qdW1ib3Ryb24ge1xyXG4gICAgICBiYWNrZ3JvdW5kOiB1cmwoJy4uL2ltZy9qdW1ib3Ryb25fMTIwMC5qcGcnKSBuby1yZXBlYXQ7XHJcbiAgICAgIGhlaWdodDogNjc1cHg7XHJcbiAgICB9XHJcbiAgfVxyXG4gIFxyXG4gIC8qKioqKioqKioqIE1lZGl1bSBkZXZpY2VzIG9ubHkgKioqKioqKioqKi9cclxuICBAbWVkaWEgKG1pbi13aWR0aDogOTkycHgpIGFuZCAobWF4LXdpZHRoOiAxMTk5cHgpIHtcclxuICAgIC8qIEhlYWRlciAqL1xyXG4gICAgI2xvZ28taW1nIHtcclxuICAgICAgYmFja2dyb3VuZDogdXJsKCcuLi9pbWcvcmVzdGF1cmFudC1sb2dvX21lZGl1bS5wbmcnKSBuby1yZXBlYXQ7XHJcbiAgICAgIHdpZHRoOiAxMDBweDtcclxuICAgICAgaGVpZ2h0OiAxMDBweDtcclxuICAgICAgbWFyZ2luOiA1cHggNXB4IDVweCAwO1xyXG4gICAgfVxyXG4gICAgLyogRW5kIEhlYWRlciAqL1xyXG4gIFxyXG4gICAgLyogSG9tZSBQYWdlICovXHJcbiAgICAuY29udGFpbmVyIC5qdW1ib3Ryb24ge1xyXG4gICAgICBiYWNrZ3JvdW5kOiB1cmwoJy4uL2ltZy9qdW1ib3Ryb25fOTkyLmpwZycpIG5vLXJlcGVhdDtcclxuICAgICAgaGVpZ2h0OiA1NThweDtcclxuICAgIH1cclxuICAgIC8qIEVuZCBIb21lIFBhZ2UgKi9cclxuICB9XHJcbiAgXHJcbiAgLyoqKioqKioqKiogU21hbGwgZGV2aWNlcyBvbmx5ICoqKioqKioqKiovXHJcbiAgQG1lZGlhIChtaW4td2lkdGg6IDc2OHB4KSBhbmQgKG1heC13aWR0aDogOTkxcHgpIHtcclxuICAgIC8qIEhvbWUgUGFnZSAqL1xyXG4gICAgLmNvbnRhaW5lciAuanVtYm90cm9uIHtcclxuICAgICAgYmFja2dyb3VuZDogdXJsKCcuLi9pbWcvanVtYm90cm9uXzc2OC5qcGcnKSBuby1yZXBlYXQ7XHJcbiAgICAgIGhlaWdodDogNDMycHg7XHJcbiAgICB9XHJcbiAgICAvKiBFbmQgSG9tZSBQYWdlICovXHJcbiAgfVxyXG4gIFxyXG4gIC8qKioqKioqKioqIEV4dHJhIHNtYWxsIGRldmljZXMgb25seSAqKioqKioqKioqL1xyXG4gIEBtZWRpYSAobWF4LXdpZHRoOiA3NjdweCkge1xyXG4gICAgLyogSGVhZGVyICovXHJcbiAgICAubmF2YmFyLWJyYW5kIHtcclxuICAgICAgcGFkZGluZy10b3A6IDEwcHg7XHJcbiAgICAgIGhlaWdodDogODBweDtcclxuICAgIH1cclxuICAgIC5uYXZiYXItYnJhbmQgaDEgeyAvKiBSZXN0YXVyYW50IG5hbWUgKi9cclxuICAgICAgcGFkZGluZy10b3A6IDEwcHg7XHJcbiAgICAgIGZvbnQtc2l6ZTogNXZ3OyAvKiAxdncgPSAxJSBvZiB2aWV3cG9ydCB3aWR0aCAqL1xyXG4gICAgfVxyXG4gICAgLm5hdmJhci1icmFuZCBwIHsgLyogS29zaGVyIGNlcnQgKi9cclxuICAgICAgZm9udC1zaXplOiAuNmVtO1xyXG4gICAgICBtYXJnaW4tdG9wOiAxMnB4O1xyXG4gICAgfVxyXG4gICAgLm5hdmJhci1icmFuZCBwIGltZyB7IC8qIFN0YXItSyAqL1xyXG4gICAgICBoZWlnaHQ6IDIwcHg7XHJcbiAgICB9XHJcbiAgXHJcbiAgICAjY29sbGFwc2FibGUtbmF2IGEgeyAvKiBDb2xsYXBzZWQgbmF2IG1lbnUgdGV4dCAqL1xyXG4gICAgICBmb250LXNpemU6IDEuMmVtO1xyXG4gICAgfVxyXG4gICAgI2NvbGxhcHNhYmxlLW5hdiBhIHNwYW4geyAvKiBDb2xsYXBzZWQgbmF2IG1lbnUgZ2x5cGggKi9cclxuICAgICAgZm9udC1zaXplOiAxZW07XHJcbiAgICAgIG1hcmdpbi1yaWdodDogNXB4O1xyXG4gICAgfVxyXG4gIFxyXG4gICAgI2NhbGwtYnRuID4gYSB7XHJcbiAgICAgIGZvbnQtc2l6ZTogMS41ZW07XHJcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICBtYXJnaW46IDAgMjBweDtcclxuICAgICAgcGFkZGluZzogMTBweDtcclxuICAgICAgYm9yZGVyOiAycHggc29saWQgI2ZmZjtcclxuICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2Y2YjMxOTtcclxuICAgICAgY29sb3I6ICM5NTFjNDk7XHJcbiAgICB9XHJcbiAgICAjeHMtZGVsaXZlciB7XHJcbiAgICAgIG1hcmdpbi10b3A6IDVweDtcclxuICAgICAgZm9udC1zaXplOiAuN2VtO1xyXG4gICAgICBsZXR0ZXItc3BhY2luZzogLjFlbTtcclxuICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxuICAgIH1cclxuICAgIC8qIEVuZCBIZWFkZXIgKi9cclxuICBcclxuICAgIC8qIEZvb3RlciAqL1xyXG4gICAgLnBhbmVsLWZvb3RlciBzZWN0aW9uIHtcclxuICAgICAgbWFyZ2luLWJvdHRvbTogMzBweDtcclxuICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgfVxyXG4gICAgLnBhbmVsLWZvb3RlciBzZWN0aW9uOm50aC1jaGlsZCgzKSB7XHJcbiAgICAgIG1hcmdpbi1ib3R0b206IDA7IC8qIG1hcmdpbiBhbHJlYWR5IGV4aXN0cyBvbiB0aGUgd2hvbGUgcm93ICovXHJcbiAgICB9XHJcbiAgICAucGFuZWwtZm9vdGVyIHNlY3Rpb24gaHIge1xyXG4gICAgICB3aWR0aDogNTAlO1xyXG4gICAgfVxyXG4gICAgLyogRW5kIEZvb3RlciAqL1xyXG4gIFxyXG4gICAgLyogSG9tZSBQYWdlICovXHJcbiAgICAuY29udGFpbmVyIC5qdW1ib3Ryb24ge1xyXG4gICAgICBtYXJnaW4tdG9wOiAzMHB4O1xyXG4gICAgICBwYWRkaW5nOiAwO1xyXG4gICAgfVxyXG4gICAgI21lbnUtdGlsZSwgI3NwZWNpYWxzLXRpbGUge1xyXG4gICAgICB3aWR0aDogMzYwcHg7XHJcbiAgICAgIG1hcmdpbjogMCBhdXRvIDE1cHg7XHJcbiAgICB9XHJcbiAgICAubWVudS1pdGVtLXBob3Rve1xyXG4gICAgICBtYXJnaW4tcmlnaHQ6IGF1dG87XHJcbiAgICB9XHJcbiAgICAubWVudS1pdGVtLXRpbGUgLm1lbnUtaXRlbS1wcmljZXtcclxuICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgfVxyXG4gICAgLm1lbnUtaXRlbS1kZXNjcmlwdGlvbntcclxuICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgfVxyXG4gIH1cclxuICBcclxuICBcclxuICAvKioqKioqKioqKiBTdXBlciBleHRyYSBzbWFsbCBkZXZpY2VzIE9ubHkgOi0pIChlLmcuLCBpUGhvbmUgNCkgKioqKioqKioqKi9cclxuICBAbWVkaWEgKG1heC13aWR0aDogNDc5cHgpIHtcclxuICAgIC8qIEhlYWRlciAqL1xyXG4gICAgLm5hdmJhci1icmFuZCBoMSB7IC8qIFJlc3RhdXJhbnQgbmFtZSAqL1xyXG4gICAgICBwYWRkaW5nLXRvcDogNXB4O1xyXG4gICAgICBmb250LXNpemU6IDZ2dztcclxuICAgIH1cclxuICAgIC8qIEVuZCBIZWFkZXIgKi9cclxuICAgIFxyXG4gICAgLyogSG9tZSBwYWdlICovXHJcbiAgICAjbWVudS10aWxlLCAjc3BlY2lhbHMtdGlsZSB7XHJcbiAgICAgIHdpZHRoOiAyODBweDtcclxuICAgICAgbWFyZ2luOiAwIGF1dG8gMTVweDtcclxuICAgIH1cclxuICBcclxuICAgIC5jb2wteHhzLTEyIHtcclxuICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgICBtaW4taGVpZ2h0OiAxcHg7XHJcbiAgICAgIHBhZGRpbmctcmlnaHQ6IDE1cHg7XHJcbiAgICAgIHBhZGRpbmctbGVmdDogMTVweDtcclxuICAgICAgZmxvYXQ6IGxlZnQ7XHJcbiAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgfVxyXG4gIH1cclxuICBcclxuICBcclxuICBcclxuICAiXX0= */